\chapter{Class: Traffic}
\label{traffic}

<<Traffic.java>>=
<<Traffic.java preamble>>
public abstract class Traffic {
  <<[[Traffic]] member variables>>
  <<[[Traffic]] constructor>>
  <<[[Traffic]] methods>>
}
@

We supply an abstract base class for developing Jargo traffic functions.

\begin{figure}
\adjustbox{scale=.8}{
\begin{minipage}[t]{0.6\textwidth}
\hi{Read Methods}
<<[[Traffic]] methods>>=
@
\end{minipage}
\begin{minipage}[t]{0.6\textwidth}
\hi{Write Methods}
<<[[Traffic]] methods>>=
@
\hi{Utilities}
<<[[Traffic]] methods>>=
public <<apply(3)>>
@
\end{minipage}
}
\caption{Traffic methods.}
\label{traffic:fig:methods}
\end{figure}

\section{Preamble}
The preamble declares the package and imports dependencies.
<<Traffic.java preamble>>=
package com.github.jargors;
import java.util.Map;
import java.util.HashMap;
import java.time.LocalDateTime;
@

\section{Member Variables}
<<[[Traffic]] member variables>>=
private final boolean DEBUG = "true".equals(System.getProperty("jargors.traffic.debug"));
@


\section{Constructor}
<<[[Traffic]] constructor>>=
public Traffic() { }
@

\section{Methods}

\subsection{\texttt{apply}(3)}
<<apply(3)>>=
float apply(int v1, int v2, int t) {
  System.out.println("Call apply("+v1+", "+v2+", "+t+")");
  return 0;
}
@ %def apply

