\chapter*{Class Overview}
\label{overview}

\addcontentsline{toc}{chapter}{Class Overview}

\section*{Class: Storage}
\addcontentsline{toc}{section}{Class: Storage}
\hi{Read Methods}
<<[[Storage]] methods>>=
public <<Read: DBQuery(2)>>
public <<Read: DBQueryCountVertices(0)>>
public <<Read: DBQueryCountEdges(0)>>
public <<Read: DBQueryVertex(1)>>
public <<Read: DBQueryAllVertices(0)>>
public <<Read: DBQueryEdge(2)>>
public <<Read: DBQueryAllEdges(0)>>
public <<Read: DBQueryStatisticsEdges(0)>>
public <<Read: DBQueryMBR(0)>>
public <<Read: DBQueryCountServers(0)>>
public <<Read: DBQueryCountRequests(0)>>
public <<Read: DBQueryAllUsers(0)>>
public <<Read: DBQueryUser(1)>>
public <<Read: DBQueryRequestStatus(2)>>
public <<Read: DBQueryRequestIsAssigned(1)>>
public <<Read: DBQueryQueuedRequests(1)>>
public <<Read: DBQueryActiveServers(1)>>
public <<Read: DBQueryServerLocationsAll(1)>>
public <<Read: DBQueryServerLocationsActive(1)>>
public <<Read: DBQueryServerRoute(1)>>
public <<Read: DBQueryServerSchedule(1)>>
public <<Read: DBQueryServerRemainingRoute(2)>>
public <<Read: DBQueryServerRemainingSchedule(2)>>
public <<Read: DBQueryServerRemainingDistance(2)>>
public <<Read: DBQueryServerRemainingDuration(2)>>
public <<Read: DBQueryServerMaxLoad(2)>>
public <<Read: DBQueryServerPendingAssignments(2)>>
public <<Read: DBQueryServerCompletedAssignments(2)>>
public <<Read: DBQueryServiceRate(0)>>
public <<Read: DBQueryBaseDistanceTotal(0)>>
public <<Read: DBQueryServerBaseDistanceTotal(0)>>
public <<Read: DBQueryRequestBaseDistanceTotal(0)>>
public <<Read: DBQueryRequestBaseDistanceUnassigned(0)>>
public <<Read: DBQueryServerTravelDistance(1)>>
public <<Read: DBQueryServerTravelDistanceTotal(0)>>
public <<Read: DBQueryServerCruisingDistance(1)>>
public <<Read: DBQueryServerCruisingDistanceTotal(0)>>
public <<Read: DBQueryServerServiceDistance(1)>>
public <<Read: DBQueryServerServiceDistanceTotal(0)>>
public <<Read: DBQueryRequestDetourDistance(1)>>
public <<Read: DBQueryRequestDetourDistanceTotal(0)>>
public <<Read: DBQueryRequestTransitDistance(1)>>
public <<Read: DBQueryRequestTransitDistanceTotal(0)>>
public <<Read: DBQueryServerTravelDuration(1)>>
public <<Read: DBQueryServerTravelDurationTotal(0)>>
public <<Read: DBQueryRequestPickupDuration(1)>>
public <<Read: DBQueryRequestPickupDurationTotal(0)>>
public <<Read: DBQueryRequestTransitDuration(1)>>
public <<Read: DBQueryRequestTransitDurationTotal(0)>>
public <<Read: DBQueryRequestTravelDuration(1)>>
public <<Read: DBQueryRequestTravelDurationTotal(0)>>
public <<Read: DBQueryRequestDepartureTime(1)>>
public <<Read: DBQueryServerDepartureTime(1)>>
public <<Read: DBQueryRequestArrivalTime(1)>>
public <<Read: DBQueryServerArrivalTime(1)>>
@
\hi{Write Methods}
<<[[Storage]] methods>>=
public <<Write: DBAddNewVertex(3)>>
public <<Write: DBAddNewEdge(4)>>
public <<Write: DBAddNewRequest(1)>>
public <<Write: DBAddNewServer(2)>>
public <<Write: DBUpdateEdgeSpeed(3)>>
public <<Write: DBUpdateServerRoute(3)>>
public <<Write: DBUpdateServerAddToSchedule(4)>>
public <<Write: DBUpdateServerRemoveFromSchedule(4)>>
@
\hi{Utilities}
<<[[Storage]] methods>>=
public <<Admin: DBCreateNewInstance(0)>>
public <<Admin: DBCloseInstance(0)>>
public <<Admin: DBLoadDataModel(0)>>
public <<Admin: DBLoadBackup(1)>>
public <<Admin: DBLoadRoadNetworkFromDB(0)>>
public <<Admin: DBLoadUsersFromDB(0)>>
public <<Admin: DBSaveBackup(1)>>
private <<Admin: DBFetch(3..)>>
private <<Admin: setupDriver(0)>>
private <<Admin: PSInit(0)>>
private <<Admin: PS(2)>>
private <<Admin: PSAdd(2..)>>
private <<Admin: PSSubmit(1..)>>
public <<getReferenceVerticesCache(0)>>
public <<getReferenceEdgesCache(0)>>
public <<getReferenceUsersCache(0)>>
@

\section*{Class: Controller}
\addcontentsline{toc}{section}{Class: Controller}
\hi{Read Methods}
<<[[Controller]] methods>>=
public <<Read: query(2)>>
public <<Read: queryAllVertices(0)>>
public <<Read: queryAllEdges(0)>>
public <<Read: queryVertex(1)>>
public <<Read: queryEdge(2)>>
public <<Read: queryUser(1)>>
public <<Read: queryQueuedRequests(1)>>
public <<Read: queryServerRoute(1)>>
public <<Read: queryServerSchedule(1)>>
public <<Read: queryCountVertices(0)>>
public <<Read: queryCountEdges(0)>>
public <<Read: queryStatisticsEdges(0)>>
public <<Read: queryMBR(0)>>
public <<Read: queryCountServers(0)>>
public <<Read: queryCountRequests(0)>>
public <<Read: queryServiceRate(0)>>
public <<Read: queryBaseDistanceTotal(0)>>
public <<Read: queryServerBaseDistanceTotal(0)>>
public <<Read: queryRequestBaseDistanceTotal(0)>>
public <<Read: queryRequestBaseDistanceUnassigned(0)>>
public <<Read: queryServerTravelDistanceTotal(0)>>
public <<Read: queryServerCruisingDistanceTotal(0)>>
public <<Read: queryServerServiceDistanceTotal(0)>>
public <<Read: queryRequestDetourDistanceTotal(0)>>
public <<Read: queryRequestTransitDistanceTotal(0)>>
public <<Read: queryServerTravelDurationTotal(0)>>
public <<Read: queryRequestPickupDurationTotal(0)>>
public <<Read: queryRequestTransitDurationTotal(0)>>
public <<Read: queryRequestTravelDurationTotal(0)>>
public <<Read: queryRequestDepartureTime(1)>>
public <<Read: queryServerDepartureTime(1)>>
public <<Read: queryRequestArrivalTime(1)>>
@
\hi{Write Methods}
<<[[Controller]] methods>>=
public <<Write: addNewServer(2)>>
public <<Write: addNewRequest(1)>>
public <<loadRoadNetworkFromFile(1)>>
public <<loadProblem(1)>>
@
\hi{Utilities}
<<[[Controller]] methods>>=
public <<Admin: createNewInstance(0)>>
public <<Admin: closeInstance(0)>>
public <<Admin: loadDataModel(0)>>
public <<Admin: loadBackup(1)>>
public <<Admin: loadRoadNetworkFromDB(0)>>
public <<Admin: loadUsersFromDB(0)>>
public <<Admin: saveBackup(1)>>
public <<Gtree: loadGtree(1)>>
public <<Gtree: closeGtree(0)>>
public <<getSimulationWorldTime(0)>>
public <<setEngineUpdatePeriod(1)>>
public <<setFinalWorldTime(1)>>
public <<setInitialWorldTime(1)>>
public <<startRealtime(1)>>
public <<startSequential(1)>>
public <<registerClient(1)>>
public <<returnRequest(1)>>
@

\section*{Class: Communicator}
\addcontentsline{toc}{section}{Class: Communicator}
\hi{Read Methods}
<<[[Communicator]] methods>>=
public <<Read: queryVertex(1)>>
public <<Read: queryEdge(2)>>
public <<Read: queryUser(1)>>
public <<Read: queryServerLocationsActive(1)>>
public <<Read: queryServerRemainingRoute(2)>>
public <<Read: queryServerRemainingSchedule(2)>>
public <<Read: queryServerRemainingDistance(2)>>
public <<Read: queryServerRemainingDuration(2)>>
public <<Read: queryServerMaxLoad(2)>>
@
\hi{Write Methods}
<<[[Communicator]] methods>>=
public <<Write: updateServerRoute(3)>>
public <<Write: updateServerAddToSchedule(4)>>
public <<Write: updateServerRemoveFromSchedule(4)>>
@
\hi{Utilities}
<<[[Communicator]] methods>>=
public <<registerStorage(1)>>
public <<registerController(1)>>
public <<forwardSimulationWorldTime(0)>>
public <<forwardReferenceVerticesCache(0)>>
public <<forwardReferenceEdgesCache(0)>>
public <<forwardReferenceUsersCache(0)>>
public <<forwardReturnRequest(1)>>
@

\section*{Class: Client}
\addcontentsline{toc}{section}{Class: Client}
\hi{Read Methods}
<<[[Client]] methods>>=
@
\hi{Write Methods}
<<[[Client]] methods>>=
@
\hi{Utilities}
<<[[Client]] methods>>=
public <<Gtree: loadGtree(1)>>
public <<Gtree: closeGtree(0)>>
public <<notifyNew(0)>>
public <<collectRequest(1)>>
public <<collectServerLocations(1)>>
public <<registerCommunicator(1)>>
public <<getRequestCollectionPeriod(0)>>
public <<setRequestCollectionPeriod(1)>>
public <<getRequestHandlingPeriod(0)>>
public <<setRequestHandlingPeriod(1)>>
public <<getServerLocationCollectionPeriod(0)>>
public <<setServerLocationCollectionPeriod(1)>>
public <<registerRoadNetwork(0)>>
public <<registerUsers(0)>>
protected <<endCollectServerLocations(1)>>
protected <<end(0)>>
protected <<handleRequest(1)>>
protected <<handleServerLocation(1)>>
@

\section*{Class: Traffic}
\addcontentsline{toc}{section}{Class: Traffic}
\hi{Read Methods}
<<[[Traffic]] methods>>=
@
\hi{Write Methods}
<<[[Traffic]] methods>>=
@
\hi{Utilities}
<<[[Traffic]] methods>>=
public <<apply(3)>>
@

\section*{Class: Tools}
\addcontentsline{toc}{section}{Class: Tools}
\hi{Read Methods}
<<[[Tools]] methods>>=
@
\hi{Write Methods}
<<[[Tools]] methods>>=
@
\hi{Utilities}
<<[[Tools]] methods>>=
public <<Gtree: GTLoadGtree(1)>>
public <<Gtree: GTCloseGtree(0)>>
public <<registerVertices(1)>>
public <<registerEdges(1)>>
public <<registerUsers(1)>>
public <<computeHaversine(4)>>
public <<computeHaversine(2)>>
public <<computeDuration(2)>>
public <<computeShortestPath(2)>>
public <<computeShortestPathDistance(2)>>
public <<computeRoute(3)>>
public <<filterByHaversine(3)>>
public <<printUser(1)>>
public <<printPath(1)>>
public <<printRoute(1)>>
public <<printSchedule(1)>>
public static <<Print(2)>>
public static <<Print(1)>>
public static <<PrintSQLException(1)>>
@

\section*{Class: DesktopController}
\addcontentsline{toc}{section}{Class: DesktopController}
\hi{Read Methods}
<<[[DesktopController]] methods>>=
@
\hi{Write Methods}
<<[[DesktopController]] methods>>=
@
\hi{Utilities}
<<[[DesktopController]] methods>>=
public <<actionQuit(1)>>
public <<actionGitHub(1)>>
public <<actionAbout(1)>>
public <<actionNew(1)>>
public <<actionLoad(1)>>
public <<actionGtree(1)>>
public <<actionProb(1)>>
public <<actionStop(1)>>
public <<actionRecordMousePress(1)>>
public <<actionTranslateCanvas(1)>>
public <<setWindowWidth(1)>>
public <<setWindowHeight(1)>>
public <<setStage(1)>>
private <<drawRoadNetwork(0)>>
@

