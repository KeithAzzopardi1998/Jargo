\chapter{Statistics with JMX}
\label{jmx}

\section{Class Members}
\subsection{Controller}
<<[[Controller]] member variables>>=
<<Stats members: controllerClock>>
<<Stats members: controllerClockReference>>
<<Stats members: controllerRequestCollection>>
<<Stats members: queryEdge>>
<<Stats members: queryServerRouteRemaining>>
<<Stats members: queryServersLocationsActive>>
<<Stats members: queryUser>>
<<Stats members: queryVertex>>
@

\subsection{Communicator}
<<[[Communicator]] member variables>>=
<<Stats members: queryEdge>>
<<Stats members: queryServerDistanceRemaining>>
<<Stats members: queryServerDurationRemaining>>
<<Stats members: queryServerLoadMax>>
<<Stats members: queryServerRouteRemaining>>
<<Stats members: queryServerScheduleRemaining>>
<<Stats members: queryServersLocationsActive>>
<<Stats members: queryUser>>
<<Stats members: queryVertex>>
@

\subsection{Client}
<<[[Client]] member variables>>=
<<Stats members: clientHandleRequest>>
@

\section{Class Registers}
\subsection{Storage}
<<[[Storage]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  StorageMonitor mon = new StorageMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=StorageMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("StorageMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Controller}
<<[[Controller]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  ControllerMonitor mon = new ControllerMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=ControllerMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("ControllerMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Communicator}
<<[[Communicator]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  CommunicatorMonitor mon = new CommunicatorMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=CommunicatorMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("CommunicatorMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Client}
<<[[Client]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  ClientMonitor mon = new ClientMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=ClientMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("ClientMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\section{Class Methods}
\subsection{Controller}
<<[[Controller]] methods>>=
public <<Get: getControllerClockNow(0)>>
public <<Get: getControllerClockReferenceDay(0)>>
public <<Get: getControllerClockReferenceHour(0)>>
public <<Get: getControllerClockReferenceMinute(0)>>
public <<Get: getControllerClockReferenceSecond(0)>>
public <<Get: getControllerRequestCollectionSizeLast(0)>>
public <<Get: getControllerRequestCollectionSizeMin(0)>>
public <<Get: getControllerRequestCollectionSizeMax(0)>>
public <<Get: getControllerRequestCollectionSizeAvg(0)>>
public <<Get: getControllerRequestCollectionDurLast(0)>>
public <<Get: getControllerRequestCollectionDurMin(0)>>
public <<Get: getControllerRequestCollectionDurMax(0)>>
public <<Get: getControllerRequestCollectionDurAvg(0)>>
public <<Get: getStatQueryEdgeCount(0)>>
public <<Get: getStatQueryEdgeDurLast(0)>>
public <<Get: getStatQueryEdgeDurTotal(0)>>
public <<Get: getStatQueryEdgeDurMin(0)>>
public <<Get: getStatQueryEdgeDurMax(0)>>
public <<Get: getStatQueryEdgeDurAvg(0)>>
public <<Get: getStatQueryServerRouteRemainingCount(0)>>
public <<Get: getStatQueryServerRouteRemainingDurLast(0)>>
public <<Get: getStatQueryServerRouteRemainingDurTotal(0)>>
public <<Get: getStatQueryServerRouteRemainingDurMin(0)>>
public <<Get: getStatQueryServerRouteRemainingDurMax(0)>>
public <<Get: getStatQueryServerRouteRemainingDurAvg(0)>>
public <<Get: getStatQueryServersLocationsActiveCount(0)>>
public <<Get: getStatQueryServersLocationsActiveDurLast(0)>>
public <<Get: getStatQueryServersLocationsActiveDurTotal(0)>>
public <<Get: getStatQueryServersLocationsActiveDurMin(0)>>
public <<Get: getStatQueryServersLocationsActiveDurMax(0)>>
public <<Get: getStatQueryServersLocationsActiveDurAvg(0)>>
public <<Get: getStatQueryUserCount(0)>>
public <<Get: getStatQueryUserDurLast(0)>>
public <<Get: getStatQueryUserDurTotal(0)>>
public <<Get: getStatQueryUserDurMin(0)>>
public <<Get: getStatQueryUserDurMax(0)>>
public <<Get: getStatQueryUserDurAvg(0)>>
public <<Get: getStatQueryVertexCount(0)>>
public <<Get: getStatQueryVertexDurLast(0)>>
public <<Get: getStatQueryVertexDurTotal(0)>>
public <<Get: getStatQueryVertexDurMin(0)>>
public <<Get: getStatQueryVertexDurMax(0)>>
public <<Get: getStatQueryVertexDurAvg(0)>>
@

\subsection{Communicator}
<<[[Communicator]] methods>>=
public <<Get: getStatQueryEdgeCount(0)>>
public <<Get: getStatQueryEdgeDurLast(0)>>
public <<Get: getStatQueryEdgeDurTotal(0)>>
public <<Get: getStatQueryEdgeDurMin(0)>>
public <<Get: getStatQueryEdgeDurMax(0)>>
public <<Get: getStatQueryEdgeDurAvg(0)>>
public <<Get: getStatQueryServerDistanceRemainingCount(0)>>
public <<Get: getStatQueryServerDistanceRemainingDurLast(0)>>
public <<Get: getStatQueryServerDistanceRemainingDurTotal(0)>>
public <<Get: getStatQueryServerDistanceRemainingDurMin(0)>>
public <<Get: getStatQueryServerDistanceRemainingDurMax(0)>>
public <<Get: getStatQueryServerDistanceRemainingDurAvg(0)>>
public <<Get: getStatQueryServerDurationRemainingCount(0)>>
public <<Get: getStatQueryServerDurationRemainingDurLast(0)>>
public <<Get: getStatQueryServerDurationRemainingDurTotal(0)>>
public <<Get: getStatQueryServerDurationRemainingDurMin(0)>>
public <<Get: getStatQueryServerDurationRemainingDurMax(0)>>
public <<Get: getStatQueryServerDurationRemainingDurAvg(0)>>
public <<Get: getStatQueryServerLoadMaxCount(0)>>
public <<Get: getStatQueryServerLoadMaxDurLast(0)>>
public <<Get: getStatQueryServerLoadMaxDurTotal(0)>>
public <<Get: getStatQueryServerLoadMaxDurMin(0)>>
public <<Get: getStatQueryServerLoadMaxDurMax(0)>>
public <<Get: getStatQueryServerLoadMaxDurAvg(0)>>
public <<Get: getStatQueryServerRouteRemainingCount(0)>>
public <<Get: getStatQueryServerRouteRemainingDurLast(0)>>
public <<Get: getStatQueryServerRouteRemainingDurTotal(0)>>
public <<Get: getStatQueryServerRouteRemainingDurMin(0)>>
public <<Get: getStatQueryServerRouteRemainingDurMax(0)>>
public <<Get: getStatQueryServerRouteRemainingDurAvg(0)>>
public <<Get: getStatQueryServerScheduleRemainingCount(0)>>
public <<Get: getStatQueryServerScheduleRemainingDurLast(0)>>
public <<Get: getStatQueryServerScheduleRemainingDurTotal(0)>>
public <<Get: getStatQueryServerScheduleRemainingDurMin(0)>>
public <<Get: getStatQueryServerScheduleRemainingDurMax(0)>>
public <<Get: getStatQueryServerScheduleRemainingDurAvg(0)>>
public <<Get: getStatQueryServersLocationsActiveCount(0)>>
public <<Get: getStatQueryServersLocationsActiveDurLast(0)>>
public <<Get: getStatQueryServersLocationsActiveDurTotal(0)>>
public <<Get: getStatQueryServersLocationsActiveDurMin(0)>>
public <<Get: getStatQueryServersLocationsActiveDurMax(0)>>
public <<Get: getStatQueryServersLocationsActiveDurAvg(0)>>
public <<Get: getStatQueryUserCount(0)>>
public <<Get: getStatQueryUserDurLast(0)>>
public <<Get: getStatQueryUserDurTotal(0)>>
public <<Get: getStatQueryUserDurMin(0)>>
public <<Get: getStatQueryUserDurMax(0)>>
public <<Get: getStatQueryUserDurAvg(0)>>
public <<Get: getStatQueryVertexCount(0)>>
public <<Get: getStatQueryVertexDurLast(0)>>
public <<Get: getStatQueryVertexDurTotal(0)>>
public <<Get: getStatQueryVertexDurMin(0)>>
public <<Get: getStatQueryVertexDurMax(0)>>
public <<Get: getStatQueryVertexDurAvg(0)>>
@

\subsection{Client}
<<[[Client]] methods>>=
public <<Get: getStatClientQueueSize(0)>>
public <<Get: getClientHandleRequestDurLast(0)>>
public <<Get: getClientHandleRequestDurMin(0)>>
public <<Get: getClientHandleRequestDurMax(0)>>
public <<Get: getClientHandleRequestDurAvg(0)>>
@

\section{Chunks}
\subsection{Import JMX dependencies}
<<Import JMX dependences>>=
import com.github.jargors.jmx.*;
import java.lang.management.*;
import javax.management.*;
@

\subsection{Stats members: controllerClock}
<<Stats members: controllerClock>>=
private int    statControllerClockNow;
@

\subsection{Stats members: controllerClockReference}
<<Stats members: controllerClockReference>>=
private int    statControllerClockReferenceDay;
private int    statControllerClockReferenceHour;
private int    statControllerClockReferenceMinute;
private int    statControllerClockReferenceSecond;
@

\subsection{Stats members: controllerRequestCollection}
<<Stats members: controllerRequestCollection>>=
private int    statControllerRequestCollectionCount = 0;
private int    statControllerRequestCollectionSizeTotal = 0;
private int    statControllerRequestCollectionSizeLast = 0;
private int    statControllerRequestCollectionSizeMin = Integer.MAX_VALUE;
private int    statControllerRequestCollectionSizeMax = 0;
private double statControllerRequestCollectionSizeAvg = 0;
private long   statControllerRequestCollectionDurLast = 0;
private long   statControllerRequestCollectionDurMin = Integer.MAX_VALUE;
private long   statControllerRequestCollectionDurMax = 0;
private long   statControllerRequestCollectionDurTotal = 0;
private double statControllerRequestCollectionDurAvg = 0;
@

\subsection{Stats members: clientHandleRequest}
<<Stats members: clientHandleRequest>>=
private int    statClientHandleRequestCount = 0;
private long   statClientHandleRequestDurLast = 0;
private long   statClientHandleRequestDurMin = Integer.MAX_VALUE;
private long   statClientHandleRequestDurMax = 0;
private long   statClientHandleRequestDurTotal = 0;
private double statClientHandleRequestDurAvg = 0;
@

\subsection{Stats members: queryEdge}
<<Stats members: queryEdge>>=
private int    statQueryEdgeCount    = 0;
private long   statQueryEdgeDurLast  = 0;
private long   statQueryEdgeDurTotal = 0;
private long   statQueryEdgeDurMin   = Integer.MAX_VALUE;
private long   statQueryEdgeDurMax   = 0;
private double statQueryEdgeDurAvg   = 0;
@

\subsection{Stats members: queryServerDistanceRemaining}
<<Stats members: queryServerDistanceRemaining>>=
private int    statQueryServerDistanceRemainingCount    = 0;
private long   statQueryServerDistanceRemainingDurLast  = 0;
private long   statQueryServerDistanceRemainingDurTotal = 0;
private long   statQueryServerDistanceRemainingDurMin   = Integer.MAX_VALUE;
private long   statQueryServerDistanceRemainingDurMax   = 0;
private double statQueryServerDistanceRemainingDurAvg   = 0;
@

\subsection{Stats members: queryServerDurationRemaining}
<<Stats members: queryServerDurationRemaining>>=
private int    statQueryServerDurationRemainingCount    = 0;
private long   statQueryServerDurationRemainingDurLast  = 0;
private long   statQueryServerDurationRemainingDurTotal = 0;
private long   statQueryServerDurationRemainingDurMin   = Integer.MAX_VALUE;
private long   statQueryServerDurationRemainingDurMax   = 0;
private double statQueryServerDurationRemainingDurAvg   = 0;
@

\subsection{Stats members: queryServerLoadMax}
<<Stats members: queryServerLoadMax>>=
private int    statQueryServerLoadMaxCount    = 0;
private long   statQueryServerLoadMaxDurLast  = 0;
private long   statQueryServerLoadMaxDurTotal = 0;
private long   statQueryServerLoadMaxDurMin   = Integer.MAX_VALUE;
private long   statQueryServerLoadMaxDurMax   = 0;
private double statQueryServerLoadMaxDurAvg   = 0;
@

\subsection{Stats members: queryServerRouteRemaining}
<<Stats members: queryServerRouteRemaining>>=
private int    statQueryServerRouteRemainingCount    = 0;
private long   statQueryServerRouteRemainingDurLast  = 0;
private long   statQueryServerRouteRemainingDurTotal = 0;
private long   statQueryServerRouteRemainingDurMin   = Integer.MAX_VALUE;
private long   statQueryServerRouteRemainingDurMax   = 0;
private double statQueryServerRouteRemainingDurAvg   = 0;
@

\subsection{Stats members: queryServerScheduleRemaining}
<<Stats members: queryServerScheduleRemaining>>=
private int    statQueryServerScheduleRemainingCount    = 0;
private long   statQueryServerScheduleRemainingDurLast  = 0;
private long   statQueryServerScheduleRemainingDurTotal = 0;
private long   statQueryServerScheduleRemainingDurMin   = Integer.MAX_VALUE;
private long   statQueryServerScheduleRemainingDurMax   = 0;
private double statQueryServerScheduleRemainingDurAvg   = 0;
@

\subsection{Stats members: queryServersLocationsActive}
<<Stats members: queryServersLocationsActive>>=
private int    statQueryServersLocationsActiveCount    = 0;
private long   statQueryServersLocationsActiveDurLast  = 0;
private long   statQueryServersLocationsActiveDurTotal = 0;
private long   statQueryServersLocationsActiveDurMin   = Integer.MAX_VALUE;
private long   statQueryServersLocationsActiveDurMax   = 0;
private double statQueryServersLocationsActiveDurAvg   = 0;
@

\subsection{Stats members: queryUser}
<<Stats members: queryUser>>=
private int    statQueryUserCount    = 0;
private long   statQueryUserDurLast  = 0;
private long   statQueryUserDurTotal = 0;
private long   statQueryUserDurMin   = Integer.MAX_VALUE;
private long   statQueryUserDurMax   = 0;
private double statQueryUserDurAvg   = 0;
@

\subsection{Stats members: queryVertex}
<<Stats members: queryVertex>>=
private int    statQueryVertexCount    = 0;
private long   statQueryVertexDurLast  = 0;
private long   statQueryVertexDurTotal = 0;
private long   statQueryVertexDurMin   = Integer.MAX_VALUE;
private long   statQueryVertexDurMax   = 0;
private double statQueryVertexDurAvg   = 0;
@

\subsection{Stats: controllerRequestCollection}
<<Stats: controllerRequestCollection>>=
    this.statControllerRequestCollectionCount++;
    this.statControllerRequestCollectionSizeLast = A1;
    this.statControllerRequestCollectionSizeTotal +=
    this.statControllerRequestCollectionSizeLast;
if (this.statControllerRequestCollectionSizeLast <
    this.statControllerRequestCollectionSizeMin) {
    this.statControllerRequestCollectionSizeMin =
    this.statControllerRequestCollectionSizeLast;}
if (this.statControllerRequestCollectionSizeLast >
    this.statControllerRequestCollectionSizeMax) {
    this.statControllerRequestCollectionSizeMax =
    this.statControllerRequestCollectionSizeLast;}
    this.statControllerRequestCollectionSizeAvg = (double)
    this.statControllerRequestCollectionSizeTotal/
    this.statControllerRequestCollectionCount;
    this.statControllerRequestCollectionDurLast = (System.currentTimeMillis() - A0);
    this.statControllerRequestCollectionDurTotal +=
    this.statControllerRequestCollectionDurLast;
if (this.statControllerRequestCollectionDurLast <
    this.statControllerRequestCollectionDurMin) {
    this.statControllerRequestCollectionDurMin =
    this.statControllerRequestCollectionDurLast;}
if (this.statControllerRequestCollectionDurLast >
    this.statControllerRequestCollectionDurMax) {
    this.statControllerRequestCollectionDurMax =
    this.statControllerRequestCollectionDurLast;}
    this.statControllerRequestCollectionDurAvg = (double)
    this.statControllerRequestCollectionDurTotal/
    this.statControllerRequestCollectionCount;
@

\subsection{Stats: clientHandleRequest}
<<Stats: clientHandleRequest>>=
    this.statClientHandleRequestCount++;
    this.statClientHandleRequestDurLast = (System.currentTimeMillis() - A0);
    this.statClientHandleRequestDurTotal +=
    this.statClientHandleRequestDurLast;
if (this.statClientHandleRequestDurLast <
    this.statClientHandleRequestDurMin) {
    this.statClientHandleRequestDurMin =
    this.statClientHandleRequestDurLast;}
if (this.statClientHandleRequestDurLast >
    this.statClientHandleRequestDurMax) {
    this.statClientHandleRequestDurMax =
    this.statClientHandleRequestDurLast;}
    this.statClientHandleRequestDurAvg = (double)
    this.statClientHandleRequestDurTotal/
    this.statClientHandleRequestCount;
@

\subsection{Stats: queryEdge}
<<Stats: queryEdge>>=
    this.statQueryEdgeCount++;
    this.statQueryEdgeDurLast = (System.currentTimeMillis() - A0);
    this.statQueryEdgeDurTotal +=
    this.statQueryEdgeDurLast;
if (this.statQueryEdgeDurLast <
    this.statQueryEdgeDurMin) {
    this.statQueryEdgeDurMin =
    this.statQueryEdgeDurLast;}
if (this.statQueryEdgeDurLast >
    this.statQueryEdgeDurMax) {
    this.statQueryEdgeDurMax =
    this.statQueryEdgeDurLast;}
    this.statQueryEdgeDurAvg = (double)
    this.statQueryEdgeDurTotal/
    this.statQueryEdgeCount;
@

\subsection{Stats: queryServerDistanceRemaining}
<<Stats: queryServerDistanceRemaining>>=
    this.statQueryServerDistanceRemainingCount++;
    this.statQueryServerDistanceRemainingDurLast = (System.currentTimeMillis() - A0);
    this.statQueryServerDistanceRemainingDurTotal +=
    this.statQueryServerDistanceRemainingDurLast;
if (this.statQueryServerDistanceRemainingDurLast <
    this.statQueryServerDistanceRemainingDurMin) {
    this.statQueryServerDistanceRemainingDurMin =
    this.statQueryServerDistanceRemainingDurLast;}
if (this.statQueryServerDistanceRemainingDurLast >
    this.statQueryServerDistanceRemainingDurMax) {
    this.statQueryServerDistanceRemainingDurMax =
    this.statQueryServerDistanceRemainingDurLast;}
    this.statQueryServerDistanceRemainingDurAvg = (double)
    this.statQueryServerDistanceRemainingDurTotal/
    this.statQueryServerDistanceRemainingCount;
@

\subsection{Stats: queryServerDurationRemaining}
<<Stats: queryServerDurationRemaining>>=
    this.statQueryServerDurationRemainingCount++;
    this.statQueryServerDurationRemainingDurLast = (System.currentTimeMillis() - A0);
    this.statQueryServerDurationRemainingDurTotal +=
    this.statQueryServerDurationRemainingDurLast;
if (this.statQueryServerDurationRemainingDurLast <
    this.statQueryServerDurationRemainingDurMin) {
    this.statQueryServerDurationRemainingDurMin =
    this.statQueryServerDurationRemainingDurLast;}
if (this.statQueryServerDurationRemainingDurLast >
    this.statQueryServerDurationRemainingDurMax) {
    this.statQueryServerDurationRemainingDurMax =
    this.statQueryServerDurationRemainingDurLast;}
    this.statQueryServerDurationRemainingDurAvg = (double)
    this.statQueryServerDurationRemainingDurTotal/
    this.statQueryServerDurationRemainingCount;
@

\subsection{Stats: queryServerLoadMax}
<<Stats: queryServerLoadMax>>=
    this.statQueryServerLoadMaxCount++;
    this.statQueryServerLoadMaxDurLast = (System.currentTimeMillis() - A0);
    this.statQueryServerLoadMaxDurTotal +=
    this.statQueryServerLoadMaxDurLast;
if (this.statQueryServerLoadMaxDurLast <
    this.statQueryServerLoadMaxDurMin) {
    this.statQueryServerLoadMaxDurMin =
    this.statQueryServerLoadMaxDurLast;}
if (this.statQueryServerLoadMaxDurLast >
    this.statQueryServerLoadMaxDurMax) {
    this.statQueryServerLoadMaxDurMax =
    this.statQueryServerLoadMaxDurLast;}
    this.statQueryServerLoadMaxDurAvg = (double)
    this.statQueryServerLoadMaxDurTotal/
    this.statQueryServerLoadMaxCount;
@

\subsection{Stats: queryServerRouteRemaining}
<<Stats: queryServerRouteRemaining>>=
    this.statQueryServerRouteRemainingCount++;
    this.statQueryServerRouteRemainingDurLast = (System.currentTimeMillis() - A0);
    this.statQueryServerRouteRemainingDurTotal +=
    this.statQueryServerRouteRemainingDurLast;
if (this.statQueryServerRouteRemainingDurLast <
    this.statQueryServerRouteRemainingDurMin) {
    this.statQueryServerRouteRemainingDurMin =
    this.statQueryServerRouteRemainingDurLast;}
if (this.statQueryServerRouteRemainingDurLast >
    this.statQueryServerRouteRemainingDurMax) {
    this.statQueryServerRouteRemainingDurMax =
    this.statQueryServerRouteRemainingDurLast;}
    this.statQueryServerRouteRemainingDurAvg = (double)
    this.statQueryServerRouteRemainingDurTotal/
    this.statQueryServerRouteRemainingCount;
@

\subsection{Stats: queryServerScheduleRemaining}
<<Stats: queryServerScheduleRemaining>>=
    this.statQueryServerScheduleRemainingCount++;
    this.statQueryServerScheduleRemainingDurLast = (System.currentTimeMillis() - A0);
    this.statQueryServerScheduleRemainingDurTotal +=
    this.statQueryServerScheduleRemainingDurLast;
if (this.statQueryServerScheduleRemainingDurLast <
    this.statQueryServerScheduleRemainingDurMin) {
    this.statQueryServerScheduleRemainingDurMin =
    this.statQueryServerScheduleRemainingDurLast;}
if (this.statQueryServerScheduleRemainingDurLast >
    this.statQueryServerScheduleRemainingDurMax) {
    this.statQueryServerScheduleRemainingDurMax =
    this.statQueryServerScheduleRemainingDurLast;}
    this.statQueryServerScheduleRemainingDurAvg = (double)
    this.statQueryServerScheduleRemainingDurTotal/
    this.statQueryServerScheduleRemainingCount;
@

\subsection{Stats: queryServersLocationsActive}
<<Stats: queryServersLocationsActive>>=
    this.statQueryServersLocationsActiveCount++;
    this.statQueryServersLocationsActiveDurLast = (System.currentTimeMillis() - A0);
    this.statQueryServersLocationsActiveDurTotal +=
    this.statQueryServersLocationsActiveDurLast;
if (this.statQueryServersLocationsActiveDurLast <
    this.statQueryServersLocationsActiveDurMin) {
    this.statQueryServersLocationsActiveDurMin =
    this.statQueryServersLocationsActiveDurLast;}
if (this.statQueryServersLocationsActiveDurLast >
    this.statQueryServersLocationsActiveDurMax) {
    this.statQueryServersLocationsActiveDurMax =
    this.statQueryServersLocationsActiveDurLast;}
    this.statQueryServersLocationsActiveDurAvg = (double)
    this.statQueryServersLocationsActiveDurTotal/
    this.statQueryServersLocationsActiveCount;
@

\subsection{Stats: queryUser}
<<Stats: queryUser>>=
    this.statQueryUserCount++;
    this.statQueryUserDurLast = (System.currentTimeMillis() - A0);
    this.statQueryUserDurTotal +=
    this.statQueryUserDurLast;
if (this.statQueryUserDurLast <
    this.statQueryUserDurMin) {
    this.statQueryUserDurMin =
    this.statQueryUserDurLast;}
if (this.statQueryUserDurLast >
    this.statQueryUserDurMax) {
    this.statQueryUserDurMax =
    this.statQueryUserDurLast;}
    this.statQueryUserDurAvg = (double)
    this.statQueryUserDurTotal/
    this.statQueryUserCount;
@

\subsection{Stats: queryVertex}
<<Stats: queryVertex>>=
    this.statQueryVertexCount++;
    this.statQueryVertexDurLast = (System.currentTimeMillis() - A0);
    this.statQueryVertexDurTotal +=
    this.statQueryVertexDurLast;
if (this.statQueryVertexDurLast <
    this.statQueryVertexDurMin) {
    this.statQueryVertexDurMin =
    this.statQueryVertexDurLast;}
if (this.statQueryVertexDurLast >
    this.statQueryVertexDurMax) {
    this.statQueryVertexDurMax =
    this.statQueryVertexDurLast;}
    this.statQueryVertexDurAvg = (double)
    this.statQueryVertexDurTotal/
    this.statQueryVertexCount;
@

\section{Methods}

\subsection{\texttt{getControllerClockNow}(0)}
<<Get: getControllerClockNow(0)>>=
int    getControllerClockNow() {
  return this.statControllerClockNow;
}
@ %def getControllerClockNow

\subsection{\texttt{getControllerClockReferenceDay}(0)}
<<Get: getControllerClockReferenceDay(0)>>=
int    getControllerClockReferenceDay() {
  return this.statControllerClockReferenceDay;
}
@ %def getControllerClockReferenceDay

\subsection{\texttt{getControllerClockReferenceHour}(0)}
<<Get: getControllerClockReferenceHour(0)>>=
int    getControllerClockReferenceHour() {
  return this.statControllerClockReferenceHour;
}
@ %def getControllerClockReferenceHour

\subsection{\texttt{getControllerClockReferenceMinute}(0)}
<<Get: getControllerClockReferenceMinute(0)>>=
int    getControllerClockReferenceMinute() {
  return this.statControllerClockReferenceMinute;
}
@ %def getControllerClockReferenceMinute

\subsection{\texttt{getControllerClockReferenceSecond}(0)}
<<Get: getControllerClockReferenceSecond(0)>>=
int    getControllerClockReferenceSecond() {
  return this.statControllerClockReferenceSecond;
}
@ %def getControllerClockReferenceSecond

\subsection{\texttt{getControllerRequestCollectionSizeLast}(0)}
<<Get: getControllerRequestCollectionSizeLast(0)>>=
int    getControllerRequestCollectionSizeLast() {
  return this.statControllerRequestCollectionSizeLast;
}
@ %def getControllerRequestCollectionSizeLast

\subsection{\texttt{getControllerRequestCollectionSizeMin}(0)}
<<Get: getControllerRequestCollectionSizeMin(0)>>=
int    getControllerRequestCollectionSizeMin() {
  return this.statControllerRequestCollectionSizeMin;
}
@ %def getControllerRequestCollectionSizeMin

\subsection{\texttt{getControllerRequestCollectionSizeMax}(0)}
<<Get: getControllerRequestCollectionSizeMax(0)>>=
int    getControllerRequestCollectionSizeMax() {
  return this.statControllerRequestCollectionSizeMax;
}
@ %def getControllerRequestCollectionSizeMax

\subsection{\texttt{getControllerRequestCollectionSizeAvg}(0)}
<<Get: getControllerRequestCollectionSizeAvg(0)>>=
double getControllerRequestCollectionSizeAvg() {
  return this.statControllerRequestCollectionSizeAvg;
}
@ %def getControllerRequestCollectionSizeAvg

\subsection{\texttt{getControllerRequestCollectionDurLast}(0)}
<<Get: getControllerRequestCollectionDurLast(0)>>=
long   getControllerRequestCollectionDurLast() {
  return this.statControllerRequestCollectionDurLast;
}
@ %def getControllerRequestCollectionDurLast

\subsection{\texttt{getControllerRequestCollectionDurMin}(0)}
<<Get: getControllerRequestCollectionDurMin(0)>>=
long   getControllerRequestCollectionDurMin() {
  return this.statControllerRequestCollectionDurMin;
}
@ %def getControllerRequestCollectionDurMin

\subsection{\texttt{getControllerRequestCollectionDurMax}(0)}
<<Get: getControllerRequestCollectionDurMax(0)>>=
long   getControllerRequestCollectionDurMax() {
  return this.statControllerRequestCollectionDurMax;
}
@ %def getControllerRequestCollectionDurMax

\subsection{\texttt{getControllerRequestCollectionDurAvg}(0)}
<<Get: getControllerRequestCollectionDurAvg(0)>>=
double getControllerRequestCollectionDurAvg() {
  return this.statControllerRequestCollectionDurAvg;
}
@ %def getControllerRequestCollectionDurAvg

\subsection{\texttt{getStatClientQueueSize}(0)}
<<Get: getStatClientQueueSize(0)>>=
int getStatClientQueueSize() {
  return this.queue.size();
}
@ %def getStatClientQueueSize

\subsection{\texttt{getClientHandleRequestDurLast}(0)}
<<Get: getClientHandleRequestDurLast(0)>>=
long getClientHandleRequestDurLast() {
  return this.statClientHandleRequestDurLast;
}
@ %def getClientHandleRequestDurLast

\subsection{\texttt{getClientHandleRequestDurMin}(0)}
<<Get: getClientHandleRequestDurMin(0)>>=
long getClientHandleRequestDurMin() {
  return this.statClientHandleRequestDurMin;
}
@ %def getClientHandleRequestDurMin

\subsection{\texttt{getClientHandleRequestDurMax}(0)}
<<Get: getClientHandleRequestDurMax(0)>>=
long getClientHandleRequestDurMax() {
  return this.statClientHandleRequestDurMax;
}
@ %def getClientHandleRequestDurMax

\subsection{\texttt{getClientHandleRequestDurAvg}(0)}
<<Get: getClientHandleRequestDurAvg(0)>>=
double getClientHandleRequestDurAvg() {
  return this.statClientHandleRequestDurAvg;
}
@ %def getClientHandleRequestDurAvg

\subsection{\texttt{getStatQueryEdgeCount}(0)}
<<Get: getStatQueryEdgeCount(0)>>=
int    getStatQueryEdgeCount() {
  return this.statQueryEdgeCount;
}
@ %def getStatQueryEdgeCount

\subsection{\texttt{getStatQueryEdgeDurLast}(0)}
<<Get: getStatQueryEdgeDurLast(0)>>=
long   getStatQueryEdgeDurLast() {
  return this.statQueryEdgeDurLast;
}
@ %def getStatQueryEdgeDurLast

\subsection{\texttt{getStatQueryEdgeDurTotal}(0)}
<<Get: getStatQueryEdgeDurTotal(0)>>=
long   getStatQueryEdgeDurTotal() {
  return this.statQueryEdgeDurTotal;
}
@ %def getStatQueryEdgeDurTotal

\subsection{\texttt{getStatQueryEdgeDurMin}(0)}
<<Get: getStatQueryEdgeDurMin(0)>>=
long   getStatQueryEdgeDurMin() {
  return this.statQueryEdgeDurMin;
}
@ %def getStatQueryEdgeDurMin

\subsection{\texttt{getStatQueryEdgeDurMax}(0)}
<<Get: getStatQueryEdgeDurMax(0)>>=
long   getStatQueryEdgeDurMax() {
  return this.statQueryEdgeDurMax;
}
@ %def getStatQueryEdgeDurMax

\subsection{\texttt{getStatQueryEdgeDurAvg}(0)}
<<Get: getStatQueryEdgeDurAvg(0)>>=
double getStatQueryEdgeDurAvg() {
  return this.statQueryEdgeDurAvg;
}
@ %def getStatQueryEdgeDurAvg

\subsection{\texttt{getStatQueryServerDistanceRemainingCount}(0)}
<<Get: getStatQueryServerDistanceRemainingCount(0)>>=
int    getStatQueryServerDistanceRemainingCount() {
  return this.statQueryServerDistanceRemainingCount;
}
@ %def getStatQueryServerDistanceRemainingCount

\subsection{\texttt{getStatQueryServerDistanceRemainingDurLast}(0)}
<<Get: getStatQueryServerDistanceRemainingDurLast(0)>>=
long   getStatQueryServerDistanceRemainingDurLast() {
  return this.statQueryServerDistanceRemainingDurLast;
}
@ %def getStatQueryServerDistanceRemainingDurLast

\subsection{\texttt{getStatQueryServerDistanceRemainingDurTotal}(0)}
<<Get: getStatQueryServerDistanceRemainingDurTotal(0)>>=
long   getStatQueryServerDistanceRemainingDurTotal() {
  return this.statQueryServerDistanceRemainingDurTotal;
}
@ %def getStatQueryServerDistanceRemainingDurTotal

\subsection{\texttt{getStatQueryServerDistanceRemainingDurMin}(0)}
<<Get: getStatQueryServerDistanceRemainingDurMin(0)>>=
long   getStatQueryServerDistanceRemainingDurMin() {
  return this.statQueryServerDistanceRemainingDurMin;
}
@ %def getStatQueryServerDistanceRemainingDurMin

\subsection{\texttt{getStatQueryServerDistanceRemainingDurMax}(0)}
<<Get: getStatQueryServerDistanceRemainingDurMax(0)>>=
long   getStatQueryServerDistanceRemainingDurMax() {
  return this.statQueryServerDistanceRemainingDurMax;
}
@ %def getStatQueryServerDistanceRemainingDurMax

\subsection{\texttt{getStatQueryServerDistanceRemainingDurAvg}(0)}
<<Get: getStatQueryServerDistanceRemainingDurAvg(0)>>=
double getStatQueryServerDistanceRemainingDurAvg() {
  return this.statQueryServerDistanceRemainingDurAvg;
}
@ %def getStatQueryServerDistanceRemainingDurAvg

\subsection{\texttt{getStatQueryServerDurationRemainingCount}(0)}
<<Get: getStatQueryServerDurationRemainingCount(0)>>=
int    getStatQueryServerDurationRemainingCount() {
  return this.statQueryServerDurationRemainingCount;
}
@ %def getStatQueryServerDurationRemainingCount

\subsection{\texttt{getStatQueryServerDurationRemainingDurLast}(0)}
<<Get: getStatQueryServerDurationRemainingDurLast(0)>>=
long   getStatQueryServerDurationRemainingDurLast() {
  return this.statQueryServerDurationRemainingDurLast;
}
@ %def getStatQueryServerDurationRemainingDurLast

\subsection{\texttt{getStatQueryServerDurationRemainingDurTotal}(0)}
<<Get: getStatQueryServerDurationRemainingDurTotal(0)>>=
long   getStatQueryServerDurationRemainingDurTotal() {
  return this.statQueryServerDurationRemainingDurTotal;
}
@ %def getStatQueryServerDurationRemainingDurTotal

\subsection{\texttt{getStatQueryServerDurationRemainingDurMin}(0)}
<<Get: getStatQueryServerDurationRemainingDurMin(0)>>=
long   getStatQueryServerDurationRemainingDurMin() {
  return this.statQueryServerDurationRemainingDurMin;
}
@ %def getStatQueryServerDurationRemainingDurMin

\subsection{\texttt{getStatQueryServerDurationRemainingDurMax}(0)}
<<Get: getStatQueryServerDurationRemainingDurMax(0)>>=
long   getStatQueryServerDurationRemainingDurMax() {
  return this.statQueryServerDurationRemainingDurMax;
}
@ %def getStatQueryServerDurationRemainingDurMax

\subsection{\texttt{getStatQueryServerDurationRemainingDurAvg}(0)}
<<Get: getStatQueryServerDurationRemainingDurAvg(0)>>=
double getStatQueryServerDurationRemainingDurAvg() {
  return this.statQueryServerDurationRemainingDurAvg;
}
@ %def getStatQueryServerDurationRemainingDurAvg

\subsection{\texttt{getStatQueryServerLoadMaxCount}(0)}
<<Get: getStatQueryServerLoadMaxCount(0)>>=
int    getStatQueryServerLoadMaxCount() {
  return this.statQueryServerLoadMaxCount;
}
@ %def getStatQueryServerLoadMaxCount

\subsection{\texttt{getStatQueryServerLoadMaxDurLast}(0)}
<<Get: getStatQueryServerLoadMaxDurLast(0)>>=
long   getStatQueryServerLoadMaxDurLast() {
  return this.statQueryServerLoadMaxDurLast;
}
@ %def getStatQueryServerLoadMaxDurLast

\subsection{\texttt{getStatQueryServerLoadMaxDurTotal}(0)}
<<Get: getStatQueryServerLoadMaxDurTotal(0)>>=
long   getStatQueryServerLoadMaxDurTotal() {
  return this.statQueryServerLoadMaxDurTotal;
}
@ %def getStatQueryServerLoadMaxDurTotal

\subsection{\texttt{getStatQueryServerLoadMaxDurMin}(0)}
<<Get: getStatQueryServerLoadMaxDurMin(0)>>=
long   getStatQueryServerLoadMaxDurMin() {
  return this.statQueryServerLoadMaxDurMin;
}
@ %def getStatQueryServerLoadMaxDurMin

\subsection{\texttt{getStatQueryServerLoadMaxDurMax}(0)}
<<Get: getStatQueryServerLoadMaxDurMax(0)>>=
long   getStatQueryServerLoadMaxDurMax() {
  return this.statQueryServerLoadMaxDurMax;
}
@ %def getStatQueryServerLoadMaxDurMax

\subsection{\texttt{getStatQueryServerLoadMaxDurAvg}(0)}
<<Get: getStatQueryServerLoadMaxDurAvg(0)>>=
double getStatQueryServerLoadMaxDurAvg() {
  return this.statQueryServerLoadMaxDurAvg;
}
@ %def getStatQueryServerLoadMaxDurAvg

\subsection{\texttt{getStatQueryServerRouteRemainingCount}(0)}
<<Get: getStatQueryServerRouteRemainingCount(0)>>=
int    getStatQueryServerRouteRemainingCount() {
  return this.statQueryServerRouteRemainingCount;
}
@ %def getStatQueryServerRouteRemainingCount

\subsection{\texttt{getStatQueryServerRouteRemainingDurLast}(0)}
<<Get: getStatQueryServerRouteRemainingDurLast(0)>>=
long   getStatQueryServerRouteRemainingDurLast() {
  return this.statQueryServerRouteRemainingDurLast;
}
@ %def getStatQueryServerRouteRemainingDurLast

\subsection{\texttt{getStatQueryServerRouteRemainingDurTotal}(0)}
<<Get: getStatQueryServerRouteRemainingDurTotal(0)>>=
long   getStatQueryServerRouteRemainingDurTotal() {
  return this.statQueryServerRouteRemainingDurTotal;
}
@ %def getStatQueryServerRouteRemainingDurTotal

\subsection{\texttt{getStatQueryServerRouteRemainingDurMin}(0)}
<<Get: getStatQueryServerRouteRemainingDurMin(0)>>=
long   getStatQueryServerRouteRemainingDurMin() {
  return this.statQueryServerRouteRemainingDurMin;
}
@ %def getStatQueryServerRouteRemainingDurMin

\subsection{\texttt{getStatQueryServerRouteRemainingDurMax}(0)}
<<Get: getStatQueryServerRouteRemainingDurMax(0)>>=
long   getStatQueryServerRouteRemainingDurMax() {
  return this.statQueryServerRouteRemainingDurMax;
}
@ %def getStatQueryServerRouteRemainingDurMax

\subsection{\texttt{getStatQueryServerRouteRemainingDurAvg}(0)}
<<Get: getStatQueryServerRouteRemainingDurAvg(0)>>=
double getStatQueryServerRouteRemainingDurAvg() {
  return this.statQueryServerRouteRemainingDurAvg;
}
@ %def getStatQueryServerRouteRemainingDurAvg

\subsection{\texttt{getStatQueryServerScheduleRemainingCount}(0)}
<<Get: getStatQueryServerScheduleRemainingCount(0)>>=
int    getStatQueryServerScheduleRemainingCount() {
  return this.statQueryServerScheduleRemainingCount;
}
@ %def getStatQueryServerScheduleRemainingCount

\subsection{\texttt{getStatQueryServerScheduleRemainingDurLast}(0)}
<<Get: getStatQueryServerScheduleRemainingDurLast(0)>>=
long   getStatQueryServerScheduleRemainingDurLast() {
  return this.statQueryServerScheduleRemainingDurLast;
}
@ %def getStatQueryServerScheduleRemainingDurLast

\subsection{\texttt{getStatQueryServerScheduleRemainingDurTotal}(0)}
<<Get: getStatQueryServerScheduleRemainingDurTotal(0)>>=
long   getStatQueryServerScheduleRemainingDurTotal() {
  return this.statQueryServerScheduleRemainingDurTotal;
}
@ %def getStatQueryServerScheduleRemainingDurTotal

\subsection{\texttt{getStatQueryServerScheduleRemainingDurMin}(0)}
<<Get: getStatQueryServerScheduleRemainingDurMin(0)>>=
long   getStatQueryServerScheduleRemainingDurMin() {
  return this.statQueryServerScheduleRemainingDurMin;
}
@ %def getStatQueryServerScheduleRemainingDurMin

\subsection{\texttt{getStatQueryServerScheduleRemainingDurMax}(0)}
<<Get: getStatQueryServerScheduleRemainingDurMax(0)>>=
long   getStatQueryServerScheduleRemainingDurMax() {
  return this.statQueryServerScheduleRemainingDurMax;
}
@ %def getStatQueryServerScheduleRemainingDurMax

\subsection{\texttt{getStatQueryServerScheduleRemainingDurAvg}(0)}
<<Get: getStatQueryServerScheduleRemainingDurAvg(0)>>=
double getStatQueryServerScheduleRemainingDurAvg() {
  return this.statQueryServerScheduleRemainingDurAvg;
}
@ %def getStatQueryServerScheduleRemainingDurAvg

\subsection{\texttt{getStatQueryServersLocationsActiveCount}(0)}
<<Get: getStatQueryServersLocationsActiveCount(0)>>=
int    getStatQueryServersLocationsActiveCount() {
  return this.statQueryServersLocationsActiveCount;
}
@ %def getStatQueryServersLocationsActiveCount

\subsection{\texttt{getStatQueryServersLocationsActiveDurLast}(0)}
<<Get: getStatQueryServersLocationsActiveDurLast(0)>>=
long   getStatQueryServersLocationsActiveDurLast() {
  return this.statQueryServersLocationsActiveDurLast;
}
@ %def getStatQueryServersLocationsActiveDurLast

\subsection{\texttt{getStatQueryServersLocationsActiveDurTotal}(0)}
<<Get: getStatQueryServersLocationsActiveDurTotal(0)>>=
long   getStatQueryServersLocationsActiveDurTotal() {
  return this.statQueryServersLocationsActiveDurTotal;
}
@ %def getStatQueryServersLocationsActiveDurTotal

\subsection{\texttt{getStatQueryServersLocationsActiveDurMin}(0)}
<<Get: getStatQueryServersLocationsActiveDurMin(0)>>=
long   getStatQueryServersLocationsActiveDurMin() {
  return this.statQueryServersLocationsActiveDurMin;
}
@ %def getStatQueryServersLocationsActiveDurMin

\subsection{\texttt{getStatQueryServersLocationsActiveDurMax}(0)}
<<Get: getStatQueryServersLocationsActiveDurMax(0)>>=
long   getStatQueryServersLocationsActiveDurMax() {
  return this.statQueryServersLocationsActiveDurMax;
}
@ %def getStatQueryServersLocationsActiveDurMax

\subsection{\texttt{getStatQueryServersLocationsActiveDurAvg}(0)}
<<Get: getStatQueryServersLocationsActiveDurAvg(0)>>=
double getStatQueryServersLocationsActiveDurAvg() {
  return this.statQueryServersLocationsActiveDurAvg;
}
@ %def getStatQueryServersLocationsActiveDurAvg

\subsection{\texttt{getStatQueryUserCount}(0)}
<<Get: getStatQueryUserCount(0)>>=
int    getStatQueryUserCount() {
  return this.statQueryUserCount;
}
@ %def getStatQueryUserCount

\subsection{\texttt{getStatQueryUserDurLast}(0)}
<<Get: getStatQueryUserDurLast(0)>>=
long   getStatQueryUserDurLast() {
  return this.statQueryUserDurLast;
}
@ %def getStatQueryUserDurLast

\subsection{\texttt{getStatQueryUserDurTotal}(0)}
<<Get: getStatQueryUserDurTotal(0)>>=
long   getStatQueryUserDurTotal() {
  return this.statQueryUserDurTotal;
}
@ %def getStatQueryUserDurTotal

\subsection{\texttt{getStatQueryUserDurMin}(0)}
<<Get: getStatQueryUserDurMin(0)>>=
long   getStatQueryUserDurMin() {
  return this.statQueryUserDurMin;
}
@ %def getStatQueryUserDurMin

\subsection{\texttt{getStatQueryUserDurMax}(0)}
<<Get: getStatQueryUserDurMax(0)>>=
long   getStatQueryUserDurMax() {
  return this.statQueryUserDurMax;
}
@ %def getStatQueryUserDurMax

\subsection{\texttt{getStatQueryUserDurAvg}(0)}
<<Get: getStatQueryUserDurAvg(0)>>=
double getStatQueryUserDurAvg() {
  return this.statQueryUserDurAvg;
}
@ %def getStatQueryUserDurAvg

\subsection{\texttt{getStatQueryVertexCount}(0)}
<<Get: getStatQueryVertexCount(0)>>=
int    getStatQueryVertexCount() {
  return this.statQueryVertexCount;
}
@ %def getStatQueryVertexCount

\subsection{\texttt{getStatQueryVertexDurLast}(0)}
<<Get: getStatQueryVertexDurLast(0)>>=
long   getStatQueryVertexDurLast() {
  return this.statQueryVertexDurLast;
}
@ %def getStatQueryVertexDurLast

\subsection{\texttt{getStatQueryVertexDurTotal}(0)}
<<Get: getStatQueryVertexDurTotal(0)>>=
long   getStatQueryVertexDurTotal() {
  return this.statQueryVertexDurTotal;
}
@ %def getStatQueryVertexDurTotal

\subsection{\texttt{getStatQueryVertexDurMin}(0)}
<<Get: getStatQueryVertexDurMin(0)>>=
long   getStatQueryVertexDurMin() {
  return this.statQueryVertexDurMin;
}
@ %def getStatQueryVertexDurMin

\subsection{\texttt{getStatQueryVertexDurMax}(0)}
<<Get: getStatQueryVertexDurMax(0)>>=
long   getStatQueryVertexDurMax() {
  return this.statQueryVertexDurMax;
}
@ %def getStatQueryVertexDurMax

\subsection{\texttt{getStatQueryVertexDurAvg}(0)}
<<Get: getStatQueryVertexDurAvg(0)>>=
double getStatQueryVertexDurAvg() {
  return this.statQueryVertexDurAvg;
}
@ %def getStatQueryVertexDurAvg

