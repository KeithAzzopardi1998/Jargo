\chapter{Statistics with JMX}
\label{jmx}

\section{Class Members}
\subsection{Controller}
<<[[Controller]] member variables>>=
<<Stats members: query(2)>>
<<Stats members: queryEdge(2)>>
<<Stats members: queryEdgeStatistics(0)>>
<<Stats members: queryEdges(0)>>
<<Stats members: queryEdgesCount(0)>>
<<Stats members: queryMBR(0)>>
<<Stats members: queryMetricRequestDistanceBaseTotal(0)>>
<<Stats members: queryMetricRequestDistanceBaseUnassignedTotal(0)>>
<<Stats members: queryMetricRequestDistanceDetourTotal(0)>>
<<Stats members: queryMetricRequestDistanceTransitTotal(0)>>
<<Stats members: queryMetricRequestDurationPickupTotal(0)>>
<<Stats members: queryMetricRequestDurationTransitTotal(0)>>
<<Stats members: queryMetricRequestDurationTravelTotal(0)>>
<<Stats members: queryMetricRequestTWViolationsTotal(0)>>
<<Stats members: queryMetricServerDistanceBaseTotal(0)>>
<<Stats members: queryMetricServerDistanceCruisingTotal(0)>>
<<Stats members: queryMetricServerDistanceServiceTotal(0)>>
<<Stats members: queryMetricServerDistanceTotal(0)>>
<<Stats members: queryMetricServerDurationTravelTotal(0)>>
<<Stats members: queryMetricServerTWViolationsTotal(0)>>
<<Stats members: queryMetricServiceRate(0)>>
<<Stats members: queryMetricUserDistanceBaseTotal(0)>>
<<Stats members: queryRequestTimeOfArrival(1)>>
<<Stats members: queryRequestTimeOfDeparture(1)>>
<<Stats members: queryRequestsCount(0)>>
<<Stats members: queryRequestsQueued(1)>>
<<Stats members: queryServerRoute(1)>>
<<Stats members: queryServerRouteActive(1)>>
<<Stats members: queryServerRouteRemaining(2)>>
<<Stats members: queryServerSchedule(1)>>
<<Stats members: queryServerTimeOfDeparture(1)>>
<<Stats members: queryServersActive(1)>>
<<Stats members: queryServersCount(0)>>
<<Stats members: queryServersLocationsActive(1)>>
<<Stats members: queryUser(1)>>
<<Stats members: queryVertex(1)>>
<<Stats members: queryVertices(0)>>
<<Stats members: queryVerticesCount(0)>>
<<Stats members: insertRequest(1)>>
<<Stats members: insertServer(2)>>
<<Stats members: loadProblem(1)>>
<<Stats members: loadRoadNetworkFromFile(1)>>
@

\subsection{Communicator}
<<[[Communicator]] member variables>>=
<<Stats members: queryEdge(2)>>
<<Stats members: queryServerDistanceRemaining(2)>>
<<Stats members: queryServerDurationRemaining(2)>>
<<Stats members: queryServerLoadMax(2)>>
<<Stats members: queryServerRouteRemaining(2)>>
<<Stats members: queryServerScheduleRemaining(2)>>
<<Stats members: queryServersLocationsActive(1)>>
<<Stats members: queryUser(1)>>
<<Stats members: queryVertex(1)>>
<<Stats members: updateServerAddToSchedule(4)>>
<<Stats members: updateServerRemoveFromSchedule(4)>>
<<Stats members: updateServerRoute(3)>>
@

\subsection{Client}
<<[[Client]] member variables>>=
<<Stats members: clientHandleRequest>>
@

\section{Class Methods}
\subsection{Controller}
<<[[Controller]] methods>>=
public <<Get: getControllerClockNow(0)>>
public <<Get: getControllerClockReferenceDay(0)>>
public <<Get: getControllerClockReferenceHour(0)>>
public <<Get: getControllerClockReferenceMinute(0)>>
public <<Get: getControllerClockReferenceSecond(0)>>
public <<Get: getControllerRequestCollectionSizeLast(0)>>
public <<Get: getControllerRequestCollectionDurLast(0)>>
public <<Get: getStatQueryEdgeDurLast(0)>>
public <<Get: getStatQueryServerRouteRemainingDurLast(0)>>
public <<Get: getStatQueryServersLocationsActiveDurLast(0)>>
public <<Get: getStatQueryUserDurLast(0)>>
public <<Get: getStatQueryVertexDurLast(0)>>
@

\subsection{Communicator}
<<[[Communicator]] methods>>=
public <<Get: getStatQueryEdgeDurLast(0)>>
public <<Get: getStatQueryServerDistanceRemainingDurLast(0)>>
public <<Get: getStatQueryServerDurationRemainingDurLast(0)>>
public <<Get: getStatQueryServerLoadMaxDurLast(0)>>
public <<Get: getStatQueryServerRouteRemainingDurLast(0)>>
public <<Get: getStatQueryServerScheduleRemainingDurLast(0)>>
public <<Get: getStatQueryServersLocationsActiveDurLast(0)>>
public <<Get: getStatQueryUserDurLast(0)>>
public <<Get: getStatQueryVertexDurLast(0)>>
@

\subsection{Client}
<<[[Client]] methods>>=
public <<Get: getStatClientQueueSize(0)>>
public <<Get: getClientHandleRequestDurLast(0)>>
@

\section{Class Registers}
\subsection{Storage}
<<[[Storage]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  StorageMonitor mon = new StorageMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=StorageMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("StorageMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Controller}
<<[[Controller]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  ControllerMonitor mon = new ControllerMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=ControllerMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("ControllerMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Communicator}
<<[[Communicator]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  CommunicatorMonitor mon = new CommunicatorMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=CommunicatorMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("CommunicatorMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Client}
<<[[Client]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  ClientMonitor mon = new ClientMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=ClientMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("ClientMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\section{Chunks}
\subsection{Import JMX dependencies}
<<Import JMX dependences>>=
import com.github.jargors.jmx.*;
import java.lang.management.*;
import javax.management.*;
@

\subsection{Stats members: controllerClock}
<<Stats members: controllerClock>>=
private int    statControllerClockNow;
@

\subsection{Stats members: controllerClockReference}
<<Stats members: controllerClockReference>>=
private int    statControllerClockReferenceDay;
private int    statControllerClockReferenceHour;
private int    statControllerClockReferenceMinute;
private int    statControllerClockReferenceSecond;
@

\subsection{Stats members: controllerRequestCollection}
<<Stats members: controllerRequestCollection>>=
private int    statControllerRequestCollectionSizeLast = 0;
private long   statControllerRequestCollectionDurLast = 0;
@

\subsection{Stats members: clientHandleRequest}
<<Stats members: clientHandleRequest>>=
private long   statClientHandleRequestDurLast = 0;
@

\subsection{Stats members: queryEdge(2)}
<<Stats members: queryEdge(2)>>=
private long   statQueryEdgeDurLast  = 0;
@

\subsection{Stats members: queryServerDistanceRemaining(2)}
<<Stats members: queryServerDistanceRemaining(2)>>=
private long   statQueryServerDistanceRemainingDurLast  = 0;
@

\subsection{Stats members: queryServerDurationRemaining(2)}
<<Stats members: queryServerDurationRemaining(2)>>=
private long   statQueryServerDurationRemainingDurLast  = 0;
@

\subsection{Stats members: queryServerLoadMax(2)}
<<Stats members: queryServerLoadMax(2)>>=
private long   statQueryServerLoadMaxDurLast  = 0;
@

\subsection{Stats members: queryServerRouteRemaining(2)}
<<Stats members: queryServerRouteRemaining(2)>>=
private long   statQueryServerRouteRemainingDurLast  = 0;
@

\subsection{Stats members: queryServerScheduleRemaining(2)}
<<Stats members: queryServerScheduleRemaining(2)>>=
private long   statQueryServerScheduleRemainingDurLast  = 0;
@

\subsection{Stats members: queryServersLocationsActive(2)}
<<Stats members: queryServersLocationsActive(2)>>=
private long   statQueryServersLocationsActiveDurLast  = 0;
@

\subsection{Stats members: queryUser(1)}
<<Stats members: queryUser(1)>>=
private long   statQueryUserDurLast  = 0;
@

\subsection{Stats members: queryVertex(1)}
<<Stats members: queryVertex(1)>>=
private long   statQueryVertexDurLast  = 0;
@

\subsection{Stats: controllerRequestCollection}
<<Stats: controllerRequestCollection>>=
this.statControllerRequestCollectionSizeLast = A1;
this.statControllerRequestCollectionDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: clientHandleRequest}
<<Stats: clientHandleRequest>>=
this.statClientHandleRequestDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryEdge(1)}
<<Stats: queryEdge(1)>>=
this.statQueryEdgeDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryServerDistanceRemaining(2)}
<<Stats: queryServerDistanceRemaining(2)>>=
this.statQueryServerDistanceRemainingDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryServerDurationRemaining(2)}
<<Stats: queryServerDurationRemaining(2)>>=
this.statQueryServerDurationRemainingDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryServerLoadMax(2)}
<<Stats: queryServerLoadMax(2)>>=
this.statQueryServerLoadMaxDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryServerRouteRemaining(2)}
<<Stats: queryServerRouteRemaining(2)>>=
this.statQueryServerRouteRemainingDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryServerScheduleRemaining(2)}
<<Stats: queryServerScheduleRemaining(2)>>=
this.statQueryServerScheduleRemainingDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryServersLocationsActive(2)}
<<Stats: queryServersLocationsActive(2)>>=
this.statQueryServersLocationsActiveDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryUser(1)}
<<Stats: queryUser(1)>>=
this.statQueryUserDurLast = (System.currentTimeMillis() - A0);
@

\subsection{Stats: queryVertex(1)}
<<Stats: queryVertex(1)>>=
this.statQueryVertexDurLast = (System.currentTimeMillis() - A0);
@

\section{Methods}

\subsection{\texttt{getControllerClockNow}(0)}
<<Get: getControllerClockNow(0)>>=
int    getControllerClockNow() {
  return this.statControllerClockNow;
}
@ %def getControllerClockNow

\subsection{\texttt{getControllerClockReferenceDay}(0)}
<<Get: getControllerClockReferenceDay(0)>>=
int    getControllerClockReferenceDay() {
  return this.statControllerClockReferenceDay;
}
@ %def getControllerClockReferenceDay

\subsection{\texttt{getControllerClockReferenceHour}(0)}
<<Get: getControllerClockReferenceHour(0)>>=
int    getControllerClockReferenceHour() {
  return this.statControllerClockReferenceHour;
}
@ %def getControllerClockReferenceHour

\subsection{\texttt{getControllerClockReferenceMinute}(0)}
<<Get: getControllerClockReferenceMinute(0)>>=
int    getControllerClockReferenceMinute() {
  return this.statControllerClockReferenceMinute;
}
@ %def getControllerClockReferenceMinute

\subsection{\texttt{getControllerClockReferenceSecond}(0)}
<<Get: getControllerClockReferenceSecond(0)>>=
int    getControllerClockReferenceSecond() {
  return this.statControllerClockReferenceSecond;
}
@ %def getControllerClockReferenceSecond

\subsection{\texttt{getControllerRequestCollectionSizeLast}(0)}
<<Get: getControllerRequestCollectionSizeLast(0)>>=
int    getControllerRequestCollectionSizeLast() {
  return this.statControllerRequestCollectionSizeLast;
}
@ %def getControllerRequestCollectionSizeLast

\subsection{\texttt{getControllerRequestCollectionDurLast}(0)}
<<Get: getControllerRequestCollectionDurLast(0)>>=
long   getControllerRequestCollectionDurLast() {
  return this.statControllerRequestCollectionDurLast;
}
@ %def getControllerRequestCollectionDurLast

\subsection{\texttt{getStatClientQueueSize}(0)}
<<Get: getStatClientQueueSize(0)>>=
int getStatClientQueueSize() {
  return this.queue.size();
}
@ %def getStatClientQueueSize

\subsection{\texttt{getClientHandleRequestDurLast}(0)}
<<Get: getClientHandleRequestDurLast(0)>>=
long getClientHandleRequestDurLast() {
  return this.statClientHandleRequestDurLast;
}
@ %def getClientHandleRequestDurLast

\subsection{\texttt{getStatQueryEdgeDurLast}(0)}
<<Get: getStatQueryEdgeDurLast(0)>>=
long   getStatQueryEdgeDurLast() {
  return this.statQueryEdgeDurLast;
}
@ %def getStatQueryEdgeDurLast

\subsection{\texttt{getStatQueryServerDistanceRemainingDurLast}(0)}
<<Get: getStatQueryServerDistanceRemainingDurLast(0)>>=
long   getStatQueryServerDistanceRemainingDurLast() {
  return this.statQueryServerDistanceRemainingDurLast;
}
@ %def getStatQueryServerDistanceRemainingDurLast

\subsection{\texttt{getStatQueryServerDurationRemainingDurLast}(0)}
<<Get: getStatQueryServerDurationRemainingDurLast(0)>>=
long   getStatQueryServerDurationRemainingDurLast() {
  return this.statQueryServerDurationRemainingDurLast;
}
@ %def getStatQueryServerDurationRemainingDurLast

\subsection{\texttt{getStatQueryServerLoadMaxDurLast}(0)}
<<Get: getStatQueryServerLoadMaxDurLast(0)>>=
long   getStatQueryServerLoadMaxDurLast() {
  return this.statQueryServerLoadMaxDurLast;
}
@ %def getStatQueryServerLoadMaxDurLast

\subsection{\texttt{getStatQueryServerRouteRemainingDurLast}(0)}
<<Get: getStatQueryServerRouteRemainingDurLast(0)>>=
long   getStatQueryServerRouteRemainingDurLast() {
  return this.statQueryServerRouteRemainingDurLast;
}
@ %def getStatQueryServerRouteRemainingDurLast

\subsection{\texttt{getStatQueryServerScheduleRemainingDurLast}(0)}
<<Get: getStatQueryServerScheduleRemainingDurLast(0)>>=
long   getStatQueryServerScheduleRemainingDurLast() {
  return this.statQueryServerScheduleRemainingDurLast;
}
@ %def getStatQueryServerScheduleRemainingDurLast

\subsection{\texttt{getStatQueryServersLocationsActiveDurLast}(0)}
<<Get: getStatQueryServersLocationsActiveDurLast(0)>>=
long   getStatQueryServersLocationsActiveDurLast() {
  return this.statQueryServersLocationsActiveDurLast;
}
@ %def getStatQueryServersLocationsActiveDurLast

\subsection{\texttt{getStatQueryUserDurLast}(0)}
<<Get: getStatQueryUserDurLast(0)>>=
long   getStatQueryUserDurLast() {
  return this.statQueryUserDurLast;
}
@ %def getStatQueryUserDurLast

\subsection{\texttt{getStatQueryVertexDurLast}(0)}
<<Get: getStatQueryVertexDurLast(0)>>=
long   getStatQueryVertexDurLast() {
  return this.statQueryVertexDurLast;
}
@ %def getStatQueryVertexDurLast

