\chapter*{Preface}
\label{preface}

\addcontentsline{toc}{chapter}{Preface}

Jargo is developed using the
Noweb\footnote{\url{https://www.cs.tufts.edu/~nr/noweb/}} literate
programming\footnote{\url{http://literateprogramming.com/}} tool.  The files in
the [[src]] directory are the source files for this document ([[jargo.pdf]])
and the Java code ([[java/*.java]], [[jar/jargors-1.0.0.jar]]).  See the
\texttt{Makefile} for build details. Yes, \textit{\texttt{Makefile}}. Some
might wonder why I didn't use a build tool like Ant, Maven, or Gradle. The
reason is that while those tools are great for managing dependencies, classes,
and targets for large projects, I think Jargo is small enough ($<$ 3,500 lines
of core code) and with only five (!) dependencies that a build tool would be
overkill. Hence anybody with GNU \texttt{make}, the Java~11 JDK, and the
dependencies can build and run Jargo. The dependencies can be easily obtained
from the Internet by using the included \texttt{getdeps.sh} script.

To anybody reading this document, keep in mind that ultimately it is
\emph{source code}. Its main purpose is to produce a working Java library. The
idea is that the flexibility of the chunks lets the code be reasoned about in
an organized way to reduce the occurrence of bugs. The best way to read it is
to put on your hacker hat. But if don't want to spare the energy, I
am spending some effort to write a user manual to make up Part I. This effort
is ongoing.

At the end of the day, Jargo is basically a
CRUD\footnote{\url{https://en.wikipedia.org/wiki/Create,_read,_update_and_delete}},
albeit with a powerful data model for representing ridesharing systems. As
such, organizing the class methods by functionality seems sensible.  Literate
programming allows us to define chunks of code which we can reference anywhere
we like. Here I've put all the CRUD chunks into Part II Chapters x--y and then
referenced them in the appropriate classes in the remaining chapters. Methods
specific to G-tree are located in Chapter x.  Non-CRUD methods specific to each
of the Jargo classes are located in Chapters x--y. The actual data definition
makes up Part III and comprises Chapters~\ref{tables}~and~\ref{views}.

\bigskip
\begin{flushright}
James\\
December 4, 2019
\end{flushright}

