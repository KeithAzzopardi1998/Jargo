\part{Annotated Source Code}
\chapter*{Class Overview}
\label{overview}

\addcontentsline{toc}{chapter}{Class Overview}

\section*{Class: Storage}
\addcontentsline{toc}{section}{Class: Storage}
\hi{Read Methods}
<<[[Storage]] methods>>=
public <<Read: DBQuery(2)>>
public <<Read: DBQueryEdge(2)>>
public <<Read: DBQueryEdgeStatistics(0)>>
public <<Read: DBQueryEdges(0)>>
public <<Read: DBQueryEdgesCount(0)>>
public <<Read: DBQueryMBR(0)>>
public <<Read: DBQueryMetricRequestDistanceBaseTotal(0)>>
public <<Read: DBQueryMetricRequestDistanceBaseUnassignedTotal(1)>>
public <<Read: DBQueryMetricRequestDistanceDetourTotal(1)>>
public <<Read: DBQueryMetricRequestDistanceTransitTotal(1)>>
public <<Read: DBQueryMetricRequestDurationPickupTotal(0)>>
public <<Read: DBQueryMetricRequestDurationTransitTotal(1)>>
public <<Read: DBQueryMetricRequestDurationTravelTotal(0)>>
public <<Read: DBQueryMetricRequestTWViolationsTotal(0)>>
public <<Read: DBQueryMetricServerDistanceBaseTotal(0)>>
public <<Read: DBQueryMetricServerDistanceCruisingTotal(1)>>
public <<Read: DBQueryMetricServerDistanceServiceTotal(1)>>
public <<Read: DBQueryMetricServerDistanceTotal(1)>>
public <<Read: DBQueryMetricServerDurationCruisingTotal(1)>>
public <<Read: DBQueryMetricServerDurationServiceTotal(1)>>
public <<Read: DBQueryMetricServerDurationTravelTotal(1)>>
public <<Read: DBQueryMetricServerTWViolationsTotal(0)>>
public <<Read: DBQueryMetricServiceRate(1)>>
public <<Read: DBQueryMetricUserDistanceBaseTotal(1)>>
public <<Read: DBQueryRequestDistanceDetour(2)>>
public <<Read: DBQueryRequestDistanceTransit(2)>>
public <<Read: DBQueryRequestDurationPickup(1)>>
public <<Read: DBQueryRequestDurationTransit(2)>>
public <<Read: DBQueryRequestDurationTravel(1)>>
public <<Read: DBQueryRequestIsAssigned(1)>>
public <<Read: DBQueryRequestStatus(2)>>
public <<Read: DBQueryRequestTimeOfArrival(1)>>
public <<Read: DBQueryRequestTimeOfDeparture(1)>>
public <<Read: DBQueryRequestsCount(0)>>
public <<Read: DBQueryRequestsQueued(1)>>
public <<Read: DBQueryServerAssignmentsCompleted(2)>>
public <<Read: DBQueryServerAssignmentsPending(2)>>
public <<Read: DBQueryServerDistance(2)>>
public <<Read: DBQueryServerDistanceCruising(2)>>
public <<Read: DBQueryServerDistanceRemaining(2)>>
public <<Read: DBQueryServerDistanceService(2)>>
public <<Read: DBQueryServerDurationCruising(2)>>
public <<Read: DBQueryServerDurationService(2)>>
public <<Read: DBQueryServerDurationRemaining(2)>>
public <<Read: DBQueryServerDurationTravel(2)>>
public <<Read: DBQueryServerLoadMax(2)>>
public <<Read: DBQueryServerRoute(1)>>
public <<Read: DBQueryServerRouteActive(1)>>
public <<Read: DBQueryServerRouteRemaining(2)>>
public <<Read: DBQueryServerSchedule(1)>>
public <<Read: DBQueryServerScheduleRemaining(2)>>
public <<Read: DBQueryServerTimeOfArrival(1)>>
public <<Read: DBQueryServerTimeOfDeparture(1)>>
public <<Read: DBQueryServersActive(1)>>
public <<Read: DBQueryServersCount(0)>>
public <<Read: DBQueryServersLocations(1)>>
public <<Read: DBQueryServersLocationsActive(1)>>
public <<Read: DBQueryUser(1)>>
public <<Read: DBQueryUsers(0)>>
public <<Read: DBQueryVertex(1)>>
public <<Read: DBQueryVertices(0)>>
public <<Read: DBQueryVerticesCount(0)>>
@
\hi{Cached Read Methods}
<<[[Storage]] methods>>=
public <<Read: DBQueryMetricRequestDistanceBaseUnassignedTotal(0)>>
public <<Read: DBQueryMetricRequestDistanceDetourTotal(0)>>
public <<Read: DBQueryMetricRequestDistanceTransitTotal(0)>>
public <<Read: DBQueryMetricRequestDurationTransitTotal(0)>>
public <<Read: DBQueryMetricServerDistanceCruisingTotal(0)>>
public <<Read: DBQueryMetricServerDistanceServiceTotal(0)>>
public <<Read: DBQueryMetricServerDistanceTotal(0)>>
public <<Read: DBQueryMetricServerDurationCruisingTotal(0)>>
public <<Read: DBQueryMetricServerDurationServiceTotal(0)>>
public <<Read: DBQueryMetricServerDurationTravelTotal(0)>>
public <<Read: DBQueryMetricServiceRate(0)>>
public <<Read: DBQueryMetricUserDistanceBaseTotal(0)>>
@
\hi{Write Methods}
<<[[Storage]] methods>>=
public <<Write: DBInsertEdge(4)>>
public <<Write: DBInsertRequest(1)>>
public <<Write: DBInsertServer(2)>>
public <<Write: DBInsertVertex(3)>>
public <<Write: DBUpdateEdgeSpeed(3)>>
public <<Write: DBUpdateServerAddToSchedule(4)>>
public <<Write: DBUpdateServerRemoveFromSchedule(4)>>
public <<Write: DBUpdateServerRoute(3)>>
@
\hi{Utilities}
<<[[Storage]] methods>>=
public <<Admin: JargoCacheRoadNetworkFromDB(0)>>
public <<Admin: JargoCacheUsersFromDB(0)>>
public <<Admin: JargoInstanceClose(0)>>
public <<Admin: JargoInstanceExport(1)>>
public <<Admin: JargoInstanceInitialize(0)>>
public <<Admin: JargoInstanceLoad(1)>>
public <<Admin: JargoInstanceLoadInMem(1)>>
public <<Admin: JargoInstanceNew(0)>>
public <<Get: getRefCacheEdges(0)>>
public <<Get: getRefCacheUsers(0)>>
public <<Get: getRefCacheVertices(0)>>
public <<Set: setRequestTimeout(1)>>
private <<Admin: JargoSetupDriver(0)>>
private <<Admin: JargoSetupPreparedStatements(0)>>
private <<Admin: PSAdd(2..)>>
private <<Admin: PSCreate(2)>>
private <<Admin: PSQuery(3..)>>
private <<Admin: PSSubmit(1..)>>
@

\section*{Class: Controller}
\addcontentsline{toc}{section}{Class: Controller}
\hi{Read Methods}
<<[[Controller]] methods>>=
public <<Read: query(2)>>
public <<Read: queryEdge(2)>>
public <<Read: queryEdgeStatistics(0)>>
public <<Read: queryEdges(0)>>
public <<Read: queryEdgesCount(0)>>
public <<Read: queryMBR(0)>>
public <<Read: queryMetricRequestDistanceBaseTotal(0)>>
public <<Read: queryMetricRequestDistanceBaseUnassignedTotal(1)>>
public <<Read: queryMetricRequestDistanceDetourTotal(1)>>
public <<Read: queryMetricRequestDistanceTransitTotal(1)>>
public <<Read: queryMetricRequestDurationPickupTotal(0)>>
public <<Read: queryMetricRequestDurationTransitTotal(1)>>
public <<Read: queryMetricRequestDurationTravelTotal(0)>>
public <<Read: queryMetricRequestTWViolationsTotal(0)>>
public <<Read: queryMetricServerDistanceBaseTotal(0)>>
public <<Read: queryMetricServerDistanceCruisingTotal(1)>>
public <<Read: queryMetricServerDistanceServiceTotal(1)>>
public <<Read: queryMetricServerDistanceTotal(1)>>
public <<Read: queryMetricServerDurationCruisingTotal(1)>>
public <<Read: queryMetricServerDurationServiceTotal(1)>>
public <<Read: queryMetricServerDurationTravelTotal(1)>>
public <<Read: queryMetricServerTWViolationsTotal(0)>>
public <<Read: queryMetricServiceRate(1)>>
public <<Read: queryMetricUserDistanceBaseTotal(1)>>
public <<Read: queryRequestTimeOfArrival(1)>>
public <<Read: queryRequestTimeOfDeparture(1)>>
public <<Read: queryRequestsCount(0)>>
public <<Read: queryRequestsQueued(1)>>
public <<Read: queryServerRoute(1)>>
public <<Read: queryServerRouteActive(1)>>
public <<Read: queryServerRouteRemaining(2)>>
public <<Read: queryServerSchedule(1)>>
public <<Read: queryServerTimeOfDeparture(1)>>
public <<Read: queryServersActive(1)>>
public <<Read: queryServersCount(0)>>
public <<Read: queryServersLocationsActive(1)>>
public <<Read: queryUser(1)>>
public <<Read: queryVertex(1)>>
public <<Read: queryVertices(0)>>
public <<Read: queryVerticesCount(0)>>
@
\hi{Cached Read Methods}
<<[[Controller]] methods>>=
public <<Read: queryMetricRequestDistanceBaseUnassignedTotal(0)>>
public <<Read: queryMetricRequestDistanceDetourTotal(0)>>
public <<Read: queryMetricRequestDistanceTransitTotal(0)>>
public <<Read: queryMetricRequestDurationTransitTotal(0)>>
public <<Read: queryMetricServerDistanceCruisingTotal(0)>>
public <<Read: queryMetricServerDistanceServiceTotal(0)>>
public <<Read: queryMetricServerDistanceTotal(0)>>
public <<Read: queryMetricServerDurationCruisingTotal(0)>>
public <<Read: queryMetricServerDurationServiceTotal(0)>>
public <<Read: queryMetricServerDurationTravelTotal(0)>>
public <<Read: queryMetricServiceRate(0)>>
public <<Read: queryMetricUserDistanceBaseTotal(0)>>
@
\hi{Write Methods}
<<[[Controller]] methods>>=
public <<Write: insertRequest(1)>>
public <<Write: insertServer(2)>>
public <<loadProblem(1)>>
public <<loadRoadNetworkFromFile(1)>>
@
\hi{Utilities}
<<[[Controller]] methods>>=
public <<Admin: cacheRoadNetworkFromDB(0)>>
public <<Admin: cacheUsersFromDB(0)>>
public <<Admin: instanceClose(0)>>
public <<Admin: instanceExport(1)>>
public <<Admin: instanceInitialize(0)>>
public <<Admin: instanceLoad(1)>>
public <<Admin: instanceLoadInMem(1)>>
public <<Admin: instanceNew(0)>>
public <<Gtree: gtreeClose(0)>>
public <<Gtree: gtreeLoad(1)>>
public <<Get: getClock(0)>>
public <<Get: getRefCommunicator(0)>>
public <<Get: getRefStorage(0)>>
public <<Get: retrieveQueueSize(0)>>
public <<Get: retrieveRefCacheEdges(0)>>
public <<Get: retrieveRefCacheUsers(0)>>
public <<Get: retrieveRefCacheVertices(0)>>
public <<Set: forwardRefCommunicator(1)>>
public <<Set: forwardRefTraffic(1)>>
public <<Set: setClockEnd(1)>>
public <<Set: setClockReference(1)>>
public <<Set: setClockStart(1)>>
public <<Set: setQueueTimeout(1)>>
public <<Set: setRefClient(1)>>
public <<isKilled(0)>>
public <<returnRequest(1)>>
public <<startRealtime(1)>>
public <<startSequential(1)>>
public <<stop(1)>>
@

\section*{Class: Communicator}
\addcontentsline{toc}{section}{Class: Communicator}
\hi{Read Methods}
<<[[Communicator]] methods>>=
public <<Read: queryEdge(2)>>
public <<Read: queryServerDistanceRemaining(2)>>
public <<Read: queryServerDurationRemaining(2)>>
public <<Read: queryServerLoadMax(2)>>
public <<Read: queryServerRouteRemaining(2)>>
public <<Read: queryServerScheduleRemaining(2)>>
public <<Read: queryServersLocationsActive(1)>>
public <<Read: queryUser(1)>>
public <<Read: queryVertex(1)>>
@
\hi{Write Methods}
<<[[Communicator]] methods>>=
public <<Write: updateServerAddToSchedule(4)>>
public <<Write: updateServerRemoveFromSchedule(4)>>
public <<Write: updateServerRoute(3)>>
@
\hi{Utilities}
<<[[Communicator]] methods>>=
public <<Get: retrieveClock(0)>>
public <<Get: retrieveRefCacheEdges(0)>>
public <<Get: retrieveRefCacheUsers(0)>>
public <<Get: retrieveRefCacheVertices(0)>>
public <<Set: setRefController(1)>>
public <<Set: setRefStorage(1)>>
public <<Set: setRefTraffic(1)>>
public <<forwardReturnRequest(1)>>
@

\section*{Class: Client}
\addcontentsline{toc}{section}{Class: Client}
\hi{Read Methods}
<<[[Client]] methods>>=
@
\hi{Write Methods}
<<[[Client]] methods>>=
@
\hi{Utilities}
<<[[Client]] methods>>=
public final <<Gtree: gtreeLoad(1)>>
public final <<Gtree: gtreeClose(0)>>
public final <<Set: forwardRefCacheEdges(1)>>
public final <<Set: forwardRefCacheUsers(1)>>
public final <<Set: forwardRefCacheVertices(1)>>
public final <<Set: setRefCommunicator(1)>>
public final <<addRequest(1)>>
public final <<dropRequests(1)>>
public final <<collectServerLocations(1)>>
public final <<notifyNew(0)>>
protected <<end(0)>>
protected <<endCollectServerLocations(1)>>
protected <<handleRequest(1)>>
protected <<handleServerLocation(1)>>
@

\section*{Class: Traffic}
\addcontentsline{toc}{section}{Class: Traffic}
\hi{Read Methods}
<<[[Traffic]] methods>>=
@
\hi{Write Methods}
<<[[Traffic]] methods>>=
@
\hi{Utilities}
<<[[Traffic]] methods>>=
public <<Set: forwardRefCacheEdges(1)>>
public <<Set: forwardRefCacheVertices(1)>>
public <<apply(3)>>
@

\section*{Class: Tools}
\addcontentsline{toc}{section}{Class: Tools}
\hi{Read Methods}
<<[[Tools]] methods>>=
public <<Read: DBQueryEdge(2)>>
public <<Read: DBQueryVertex(1)>>
@
\hi{Write Methods}
<<[[Tools]] methods>>=
@
\hi{Utilities}
<<[[Tools]] methods>>=
public <<Gtree: GTGtreeLoad(1)>>
public <<Gtree: GTGtreeClose(0)>>
public <<Set: setRefCacheEdges(1)>>
public <<Set: setRefCacheUsers(1)>>
public <<Set: setRefCacheVertices(1)>>
public <<computeDuration(2)>>
public <<computeHaversine(2)>>
public <<computeHaversine(4)>>
public <<computeRoute(3)>>
public <<computeShortestPath(2)>>
public <<computeShortestPathDistance(2)>>
public <<filterByHaversine(3)>>
public <<printPath(1)>>
public <<printRoute(1)>>
public <<printSchedule(1)>>
public <<printUser(1)>>
public static <<Print(1)>>
public static <<Print(2)>>
public static <<PrintSQLException(1)>>
@

\section*{Class: DesktopController}
\addcontentsline{toc}{section}{Class: DesktopController}
\hi{Read Methods}
<<[[DesktopController]] methods>>=
@
\hi{Write Methods}
<<[[DesktopController]] methods>>=
@
\hi{Utilities}
<<[[DesktopController]] methods>>=
public <<actionAbout(1)>>
public <<actionClient(1)>>
public <<actionGitHub(1)>>
public <<actionGtree(1)>>
public <<actionLoad(1)>>
public <<actionNew(1)>>
public <<actionProb(1)>>
public <<actionQuit(1)>>
public <<actionRoad(1)>>
public <<actionStartRealtime(1)>>
public <<actionStartSequential(1)>>
public <<actionStop(1)>>
public <<actionTraffic(1)>>
public <<actionZoomCanvas(1)>>
public <<setStage(1)>>
public <<setWindowHeight(1)>>
public <<setWindowWidth(1)>>
public <<toggleMetric(1)>>
private <<initializeCanvas(0)>>
@

