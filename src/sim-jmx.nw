\section{JMX Monitoring}
\label{sim-jmx}

Whenever a new read or write method is added to a class, add the JMX statistics
for the method here. Each method must have a \textit{Stats members:} chunk that
defines the member variables for the statistics to be collected (usually just
call duration of the last invocation) and a \textit{Stats:} chunk that assigns
values to the member variables. Each member variable must also have a
corresponding \textit{get} method that returns the value of the variable.

\subsection{Monitors and Beans}

Clients (such as [[jconsole]] or VisualVM) call the ``Monitor'' methods to get
and set variables during runtime via JMX. Each Monitor is its own class
and implements an ``MBean'' that defines the interface.

\subsubsection{\texttt{ClientMonitor} and \texttt{ClientMonitorMBean}}
<<ClientMonitor.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Client;
import com.github.jargors.jmx.ClientMonitorMBean;
public class ClientMonitor implements ClientMonitorMBean {
  private Client client = null;
  public ClientMonitor(final Client client) {
    this.client = client;
  }
  public int getStatClientQueueSize() {
    return this.client.getStatClientQueueSize();
  }
  public long getStatClientHandleRequestDur() {
    return this.client.getStatClientHandleRequestDur();
  }
}
@
<<ClientMonitorMBean.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Client;
public interface ClientMonitorMBean {
  public int getStatClientQueueSize();
  public long getStatClientHandleRequestDur();
}
@

\subsubsection{\texttt{CommunicatorMonitor} and \texttt{CommunicatorMonitorMBean}}
<<CommunicatorMonitor.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Communicator;
import com.github.jargors.jmx.CommunicatorMonitorMBean;
public class CommunicatorMonitor implements CommunicatorMonitorMBean {
  private Communicator communicator = null;
  public CommunicatorMonitor(final Communicator communicator) {
    this.communicator = communicator;
  }
  public long getStatQueryEdgeDur() {
    return this.communicator.getStatQueryEdgeDur();
  }
  public long getStatQueryServerDistanceRemainingDur() {
    return this.communicator.getStatQueryServerDistanceRemainingDur();
  }
  public long getStatQueryServerDurationRemainingDur() {
    return this.communicator.getStatQueryServerDurationRemainingDur();
  }
  public long getStatQueryServerLoadMaxDur() {
    return this.communicator.getStatQueryServerLoadMaxDur();
  }
  public long getStatQueryServerRouteRemainingDur() {
    return this.communicator.getStatQueryServerRouteRemainingDur();
  }
  public long getStatQueryServerScheduleRemainingDur() {
    return this.communicator.getStatQueryServerScheduleRemainingDur();
  }
  public long getStatQueryServersLocationsActiveDur() {
    return this.communicator.getStatQueryServersLocationsActiveDur();
  }
  public long getStatQueryUserDur() {
    return this.communicator.getStatQueryUserDur();
  }
  public long getStatQueryVertexDur() {
    return this.communicator.getStatQueryVertexDur();
  }
}
@
<<CommunicatorMonitorMBean.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Communicator;
public interface CommunicatorMonitorMBean {
  public long getStatQueryEdgeDur();
  public long getStatQueryServerDistanceRemainingDur();
  public long getStatQueryServerDurationRemainingDur();
  public long getStatQueryServerLoadMaxDur();
  public long getStatQueryServerRouteRemainingDur();
  public long getStatQueryServerScheduleRemainingDur();
  public long getStatQueryServersLocationsActiveDur();
  public long getStatQueryUserDur();
  public long getStatQueryVertexDur();
}
@

\subsubsection{\texttt{ControllerMonitor} and \texttt{ControllerMonitorMBean}}
<<ControllerMonitor.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Controller;
import com.github.jargors.jmx.ControllerMonitorMBean;
public class ControllerMonitor implements ControllerMonitorMBean {
  private Controller controller = null;
  public ControllerMonitor(final Controller controller) {
    this.controller = controller;
  }
  public int getStatControllerClock() {
    return this.controller.getStatControllerClock();
  }
  public int getStatControllerClockReferenceDay() {
    return this.controller.getStatControllerClockReferenceDay();
  }
  public int getStatControllerClockReferenceHour() {
    return this.controller.getStatControllerClockReferenceHour();
  }
  public int getStatControllerClockReferenceMinute() {
    return this.controller.getStatControllerClockReferenceMinute();
  }
  public int getStatControllerClockReferenceSecond() {
    return this.controller.getStatControllerClockReferenceSecond();
  }
  public int getStatControllerRequestCollectionSize() {
    return this.controller.getStatControllerRequestCollectionSize();
  }
  public int getStatControllerRequestCollectionDropped() {
    return this.controller.getStatControllerRequestCollectionDropped();
  }
  public long getStatControllerRequestCollectionDur() {
    return this.controller.getStatControllerRequestCollectionDur();
  }
  public long getStatQueryDur() {
    return this.controller.getStatQueryDur();
  }
  public long getStatQueryEdgeDur() {
    return this.controller.getStatQueryEdgeDur();
  }
  public long getStatQueryEdgeStatisticsDur() {
    return this.controller.getStatQueryEdgeStatisticsDur();
  }
  public long getStatQueryEdgesCountDur() {
    return this.controller.getStatQueryEdgesCountDur();
  }
  public long getStatQueryEdgesDur() {
    return this.controller.getStatQueryEdgesDur();
  }
  public long getStatQueryMBRDur() {
    return this.controller.getStatQueryMBRDur();
  }
  public long getStatQueryMetricRequestDistanceBaseTotalDur() {
    return this.controller.getStatQueryMetricRequestDistanceBaseTotalDur();
  }
  public long getStatQueryMetricRequestDistanceBaseUnassignedTotalDur() {
    return this.controller.getStatQueryMetricRequestDistanceBaseUnassignedTotalDur();
  }
  public long getStatQueryMetricRequestDistanceDetourTotalDur() {
    return this.controller.getStatQueryMetricRequestDistanceDetourTotalDur();
  }
  public long getStatQueryMetricRequestDistanceTransitTotalDur() {
    return this.controller.getStatQueryMetricRequestDistanceTransitTotalDur();
  }
  public long getStatQueryMetricRequestDurationPickupTotalDur() {
    return this.controller.getStatQueryMetricRequestDurationPickupTotalDur();
  }
  public long getStatQueryMetricRequestDurationTransitTotalDur() {
    return this.controller.getStatQueryMetricRequestDurationTransitTotalDur();
  }
  public long getStatQueryMetricRequestDurationTravelTotalDur() {
    return this.controller.getStatQueryMetricRequestDurationTravelTotalDur();
  }
  public long getStatQueryMetricRequestTWViolationsTotalDur() {
    return this.controller.getStatQueryMetricRequestTWViolationsTotalDur();
  }
  public long getStatQueryMetricServerDistanceBaseTotalDur() {
    return this.controller.getStatQueryMetricServerDistanceBaseTotalDur();
  }
  public long getStatQueryMetricServerDistanceCruisingTotalDur() {
    return this.controller.getStatQueryMetricServerDistanceCruisingTotalDur();
  }
  public long getStatQueryMetricServerDistanceServiceTotalDur() {
    return this.controller.getStatQueryMetricServerDistanceServiceTotalDur();
  }
  public long getStatQueryMetricServerDistanceTotalDur() {
    return this.controller.getStatQueryMetricServerDistanceTotalDur();
  }
  public long getStatQueryMetricServerDurationCruisingTotalDur() {
    return this.controller.getStatQueryMetricServerDurationCruisingTotalDur();
  }
  public long getStatQueryMetricServerDurationServiceTotalDur() {
    return this.controller.getStatQueryMetricServerDurationServiceTotalDur();
  }
  public long getStatQueryMetricServerDurationTravelTotalDur() {
    return this.controller.getStatQueryMetricServerDurationTravelTotalDur();
  }
  public long getStatQueryMetricServerTWViolationsTotalDur() {
    return this.controller.getStatQueryMetricServerTWViolationsTotalDur();
  }
  public long getStatQueryMetricServiceRateDur() {
    return this.controller.getStatQueryMetricServiceRateDur();
  }
  public long getStatQueryMetricUserDistanceBaseTotalDur() {
    return this.controller.getStatQueryMetricUserDistanceBaseTotalDur();
  }
  public long getStatQueryRequestTimeOfArrivalDur() {
    return this.controller.getStatQueryRequestTimeOfArrivalDur();
  }
  public long getStatQueryRequestTimeOfDepartureDur() {
    return this.controller.getStatQueryRequestTimeOfDepartureDur();
  }
  public long getStatQueryRequestsCountDur() {
    return this.controller.getStatQueryRequestsCountDur();
  }
  public long getStatQueryRequestsCountActiveDur() {
    return this.controller.getStatQueryRequestsCountActiveDur();
  }
  public long getStatQueryRequestsCountCompletedDur() {
    return this.controller.getStatQueryRequestsCountCompletedDur();
  }
  public long getStatQueryRequestsQueuedDur() {
    return this.controller.getStatQueryRequestsQueuedDur();
  }
  public long getStatQueryServerRouteActiveDur() {
    return this.controller.getStatQueryServerRouteActiveDur();
  }
  public long getStatQueryServerRouteDur() {
    return this.controller.getStatQueryServerRouteDur();
  }
  public long getStatQueryServerRouteRemainingDur() {
    return this.controller.getStatQueryServerRouteRemainingDur();
  }
  public long getStatQueryServerScheduleDur() {
    return this.controller.getStatQueryServerScheduleDur();
  }
  public long getStatQueryServerTimeOfDepartureDur() {
    return this.controller.getStatQueryServerTimeOfDepartureDur();
  }
  public long getStatQueryServersActiveDur() {
    return this.controller.getStatQueryServersActiveDur();
  }
  public long getStatQueryServersCountDur() {
    return this.controller.getStatQueryServersCountDur();
  }
  public long getStatQueryServersCountActiveDur() {
    return this.controller.getStatQueryServersCountActiveDur();
  }
  public long getStatQueryServersLocationsActiveDur() {
    return this.controller.getStatQueryServersLocationsActiveDur();
  }
  public long getStatQueryUserDur() {
    return this.controller.getStatQueryUserDur();
  }
  public long getStatQueryVertexDur() {
    return this.controller.getStatQueryVertexDur();
  }
  public long getStatQueryVerticesCountDur() {
    return this.controller.getStatQueryVerticesCountDur();
  }
  public long getStatQueryVerticesDur() {
    return this.controller.getStatQueryVerticesDur();
  }
}
@
<<ControllerMonitorMBean.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Controller;
public interface ControllerMonitorMBean {
  public int  getStatControllerClock();
  public int  getStatControllerClockReferenceDay();
  public int  getStatControllerClockReferenceHour();
  public int  getStatControllerClockReferenceMinute();
  public int  getStatControllerClockReferenceSecond();
  public int  getStatControllerRequestCollectionSize();
  public int  getStatControllerRequestCollectionDropped();
  public long getStatControllerRequestCollectionDur();
  public long getStatQueryDur();
  public long getStatQueryEdgeDur();
  public long getStatQueryEdgeStatisticsDur();
  public long getStatQueryEdgesCountDur();
  public long getStatQueryEdgesDur();
  public long getStatQueryMBRDur();
  public long getStatQueryMetricRequestDistanceBaseTotalDur();
  public long getStatQueryMetricRequestDistanceBaseUnassignedTotalDur();
  public long getStatQueryMetricRequestDistanceDetourTotalDur();
  public long getStatQueryMetricRequestDistanceTransitTotalDur();
  public long getStatQueryMetricRequestDurationPickupTotalDur();
  public long getStatQueryMetricRequestDurationTransitTotalDur();
  public long getStatQueryMetricRequestDurationTravelTotalDur();
  public long getStatQueryMetricRequestTWViolationsTotalDur();
  public long getStatQueryMetricServerDistanceBaseTotalDur();
  public long getStatQueryMetricServerDistanceCruisingTotalDur();
  public long getStatQueryMetricServerDistanceServiceTotalDur();
  public long getStatQueryMetricServerDistanceTotalDur();
  public long getStatQueryMetricServerDurationCruisingTotalDur();
  public long getStatQueryMetricServerDurationServiceTotalDur();
  public long getStatQueryMetricServerDurationTravelTotalDur();
  public long getStatQueryMetricServerTWViolationsTotalDur();
  public long getStatQueryMetricServiceRateDur();
  public long getStatQueryMetricUserDistanceBaseTotalDur();
  public long getStatQueryRequestTimeOfArrivalDur();
  public long getStatQueryRequestTimeOfDepartureDur();
  public long getStatQueryRequestsCountDur();
  public long getStatQueryRequestsCountActiveDur();
  public long getStatQueryRequestsCountCompletedDur();
  public long getStatQueryRequestsQueuedDur();
  public long getStatQueryServerRouteActiveDur();
  public long getStatQueryServerRouteDur();
  public long getStatQueryServerRouteRemainingDur();
  public long getStatQueryServerScheduleDur();
  public long getStatQueryServerTimeOfDepartureDur();
  public long getStatQueryServersActiveDur();
  public long getStatQueryServersCountDur();
  public long getStatQueryServersCountActiveDur();
  public long getStatQueryServersLocationsActiveDur();
  public long getStatQueryUserDur();
  public long getStatQueryVertexDur();
  public long getStatQueryVerticesCountDur();
  public long getStatQueryVerticesDur();
}
@

\subsubsection{\texttt{StorageMonitor} and \texttt{StorageMonitorMBean}}
<<StorageMonitor.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Storage;
import com.github.jargors.jmx.StorageMonitorMBean;
public class StorageMonitor implements StorageMonitorMBean {
  private Storage storage = null;
  public StorageMonitor(final Storage storage) {
    this.storage = storage;
  }
}
@
<<StorageMonitorMBean.java>>=
<<Package: [[jmx]]>>
import com.github.jargors.sim.Storage;
public interface StorageMonitorMBean { }
@

\subsection{Class Members}
\subsubsection{Controller}
<<[[Controller]] member variables>>=
<<Stats members: controllerClock>>
<<Stats members: controllerClockReference>>
<<Stats members: controllerRequestCollection>>
<<Stats members: query(2)>>
<<Stats members: queryEdge(2)>>
<<Stats members: queryEdgeStatistics(0)>>
<<Stats members: queryEdges(0)>>
<<Stats members: queryEdgesCount(0)>>
<<Stats members: queryMBR(0)>>
<<Stats members: queryMetricRequestDistanceBaseTotal(0)>>
<<Stats members: queryMetricRequestDistanceBaseUnassignedTotal(1)>>
<<Stats members: queryMetricRequestDistanceDetourTotal(1)>>
<<Stats members: queryMetricRequestDistanceTransitTotal(1)>>
<<Stats members: queryMetricRequestDurationPickupTotal(1)>>
<<Stats members: queryMetricRequestDurationTransitTotal(1)>>
<<Stats members: queryMetricRequestDurationTravelTotal(1)>>
<<Stats members: queryMetricRequestTWViolationsTotal(0)>>
<<Stats members: queryMetricServerDistanceBaseTotal(0)>>
<<Stats members: queryMetricServerDistanceCruisingTotal(1)>>
<<Stats members: queryMetricServerDistanceServiceTotal(1)>>
<<Stats members: queryMetricServerDistanceTotal(1)>>
<<Stats members: queryMetricServerDurationCruisingTotal(1)>>
<<Stats members: queryMetricServerDurationServiceTotal(1)>>
<<Stats members: queryMetricServerDurationTravelTotal(1)>>
<<Stats members: queryMetricServerTWViolationsTotal(0)>>
<<Stats members: queryMetricServiceRate(1)>>
<<Stats members: queryMetricUserDistanceBaseTotal(1)>>
<<Stats members: queryRequestTimeOfArrival(1)>>
<<Stats members: queryRequestTimeOfDeparture(1)>>
<<Stats members: queryRequestsCount(0)>>
<<Stats members: queryRequestsCountActive(1)>>
<<Stats members: queryRequestsCountCompleted(1)>>
<<Stats members: queryRequestsQueued(1)>>
<<Stats members: queryServerRoute(1)>>
<<Stats members: queryServerRouteActive(1)>>
<<Stats members: queryServerRouteRemaining(2)>>
<<Stats members: queryServerSchedule(1)>>
<<Stats members: queryServerTimeOfDeparture(1)>>
<<Stats members: queryServersActive(1)>>
<<Stats members: queryServersCount(0)>>
<<Stats members: queryServersCountActive(1)>>
<<Stats members: queryServersLocationsActive(1)>>
<<Stats members: queryUser(1)>>
<<Stats members: queryVertex(1)>>
<<Stats members: queryVertices(0)>>
<<Stats members: queryVerticesCount(0)>>
@

\subsubsection{Communicator}
<<[[Communicator]] member variables>>=
<<Stats members: queryEdge(2)>>
<<Stats members: queryServerDistanceRemaining(2)>>
<<Stats members: queryServerDurationRemaining(2)>>
<<Stats members: queryServerLoadMax(2)>>
<<Stats members: queryServerRouteRemaining(2)>>
<<Stats members: queryServerScheduleRemaining(2)>>
<<Stats members: queryServersLocationsActive(1)>>
<<Stats members: queryUser(1)>>
<<Stats members: queryVertex(1)>>
<<Stats members: updateServerAddToSchedule(4)>>
<<Stats members: updateServerRemoveFromSchedule(4)>>
<<Stats members: updateServerRoute(3)>>
@

\subsubsection{Client}
<<[[Client]] member variables>>=
<<Stats members: clientHandleRequest>>
@

\subsection{Class Methods}
\subsubsection{Controller}
<<[[Controller]] methods>>=
public <<Get: getStatControllerClock(0)>>
public <<Get: getStatControllerClockReferenceDay(0)>>
public <<Get: getStatControllerClockReferenceHour(0)>>
public <<Get: getStatControllerClockReferenceMinute(0)>>
public <<Get: getStatControllerClockReferenceSecond(0)>>
public <<Get: getStatControllerRequestCollectionSize(0)>>
public <<Get: getStatControllerRequestCollectionDropped(0)>>
public <<Get: getStatControllerRequestCollectionDur(0)>>
public <<Get: getStatQueryDur(0)>>
public <<Get: getStatQueryEdgeDur(0)>>
public <<Get: getStatQueryEdgeStatisticsDur(0)>>
public <<Get: getStatQueryEdgesCountDur(0)>>
public <<Get: getStatQueryEdgesDur(0)>>
public <<Get: getStatQueryMBRDur(0)>>
public <<Get: getStatQueryMetricRequestDistanceBaseTotalDur(0)>>
public <<Get: getStatQueryMetricRequestDistanceBaseUnassignedTotalDur(0)>>
public <<Get: getStatQueryMetricRequestDistanceDetourTotalDur(0)>>
public <<Get: getStatQueryMetricRequestDistanceTransitTotalDur(0)>>
public <<Get: getStatQueryMetricRequestDurationPickupTotalDur(0)>>
public <<Get: getStatQueryMetricRequestDurationTransitTotalDur(0)>>
public <<Get: getStatQueryMetricRequestDurationTravelTotalDur(0)>>
public <<Get: getStatQueryMetricRequestTWViolationsTotalDur(0)>>
public <<Get: getStatQueryMetricServerDistanceBaseTotalDur(0)>>
public <<Get: getStatQueryMetricServerDistanceCruisingTotalDur(0)>>
public <<Get: getStatQueryMetricServerDistanceServiceTotalDur(0)>>
public <<Get: getStatQueryMetricServerDistanceTotalDur(0)>>
public <<Get: getStatQueryMetricServerDurationCruisingTotalDur(0)>>
public <<Get: getStatQueryMetricServerDurationServiceTotalDur(0)>>
public <<Get: getStatQueryMetricServerDurationTravelTotalDur(0)>>
public <<Get: getStatQueryMetricServerTWViolationsTotalDur(0)>>
public <<Get: getStatQueryMetricServiceRateDur(0)>>
public <<Get: getStatQueryMetricUserDistanceBaseTotalDur(0)>>
public <<Get: getStatQueryRequestTimeOfArrivalDur(0)>>
public <<Get: getStatQueryRequestTimeOfDepartureDur(0)>>
public <<Get: getStatQueryRequestsCountDur(0)>>
public <<Get: getStatQueryRequestsCountActiveDur(0)>>
public <<Get: getStatQueryRequestsCountCompletedDur(0)>>
public <<Get: getStatQueryRequestsQueuedDur(0)>>
public <<Get: getStatQueryServerRouteActiveDur(0)>>
public <<Get: getStatQueryServerRouteDur(0)>>
public <<Get: getStatQueryServerRouteRemainingDur(0)>>
public <<Get: getStatQueryServerScheduleDur(0)>>
public <<Get: getStatQueryServerTimeOfDepartureDur(0)>>
public <<Get: getStatQueryServersActiveDur(0)>>
public <<Get: getStatQueryServersCountDur(0)>>
public <<Get: getStatQueryServersCountActiveDur(0)>>
public <<Get: getStatQueryServersLocationsActiveDur(0)>>
public <<Get: getStatQueryUserDur(0)>>
public <<Get: getStatQueryVertexDur(0)>>
public <<Get: getStatQueryVerticesCountDur(0)>>
public <<Get: getStatQueryVerticesDur(0)>>
@

\subsubsection{Communicator}
<<[[Communicator]] methods>>=
public <<Get: getStatQueryEdgeDur(0)>>
public <<Get: getStatQueryServerDistanceRemainingDur(0)>>
public <<Get: getStatQueryServerDurationRemainingDur(0)>>
public <<Get: getStatQueryServerLoadMaxDur(0)>>
public <<Get: getStatQueryServerRouteRemainingDur(0)>>
public <<Get: getStatQueryServerScheduleRemainingDur(0)>>
public <<Get: getStatQueryServersLocationsActiveDur(0)>>
public <<Get: getStatQueryUserDur(0)>>
public <<Get: getStatQueryVertexDur(0)>>
@

\subsubsection{Client}
<<[[Client]] methods>>=
public <<Get: getStatClientHandleRequestDur(0)>>
public <<Get: getStatClientQueueSize(0)>>
@

\subsection{Class Registers}
\subsubsection{Storage}
<<[[Storage]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  StorageMonitor mon = new StorageMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=StorageMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("StorageMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsubsection{Controller}
<<[[Controller]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  ControllerMonitor mon = new ControllerMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=ControllerMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("ControllerMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsubsection{Communicator}
<<[[Communicator]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  CommunicatorMonitor mon = new CommunicatorMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=CommunicatorMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("CommunicatorMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsubsection{Client}
<<[[Client]] register JMX monitor>>=
try {
  MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
  ClientMonitor mon = new ClientMonitor(this);
  mbs.registerMBean(mon, new ObjectName("com.github.jargors.jmx:type=ClientMonitor"));
} catch (InstanceAlreadyExistsException e) {
  // ...
} catch (Exception e) {
  System.err.printf("ClientMonitor failed; reason: %s\n", e.toString());
  System.err.printf("Continuing with monitoring disabled\n");
}
@

\subsection{Chunks}
\subsubsection{Import JMX dependencies}
<<Import JMX dependencies>>=
import com.github.jargors.jmx.*;
import java.lang.management.*;
import javax.management.*;
@

\subsubsection{Stats members: clientHandleRequest}
<<Stats members: clientHandleRequest>>=
private long   statClientHandleRequestDur = 0;
@

\subsubsection{Stats members: controllerClock}
<<Stats members: controllerClock>>=
private int    statControllerClock;
@

\subsubsection{Stats members: controllerClockReference}
<<Stats members: controllerClockReference>>=
private int    statControllerClockReferenceDay;
private int    statControllerClockReferenceHour;
private int    statControllerClockReferenceMinute;
private int    statControllerClockReferenceSecond;
@

\subsubsection{Stats members: controllerRequestCollection}
<<Stats members: controllerRequestCollection>>=
private int    statControllerRequestCollectionSize = 0;
private int    statControllerRequestCollectionDropped = 0;
private long   statControllerRequestCollectionDur = 0;
@

\subsubsection{Stats members: query(2)}
<<Stats members: query(2)>>=
private long statQueryDur = 0;
@

\subsubsection{Stats members: queryEdge(2)}
<<Stats members: queryEdge(2)>>=
private long statQueryEdgeDur = 0;
@

\subsubsection{Stats members: queryEdgeStatistics(0)}
<<Stats members: queryEdgeStatistics(0)>>=
private long statQueryEdgeStatisticsDur = 0;
@

\subsubsection{Stats members: queryEdges(0)}
<<Stats members: queryEdges(0)>>=
private long statQueryEdgesDur = 0;
@

\subsubsection{Stats members: queryEdgesCount(0)}
<<Stats members: queryEdgesCount(0)>>=
private long statQueryEdgesCountDur = 0;
@

\subsubsection{Stats members: queryMBR(0)}
<<Stats members: queryMBR(0)>>=
private long statQueryMBRDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDistanceBaseTotal(0)}
<<Stats members: queryMetricRequestDistanceBaseTotal(0)>>=
private long statQueryMetricRequestDistanceBaseTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDistanceBaseUnassignedTotal(1)}
<<Stats members: queryMetricRequestDistanceBaseUnassignedTotal(1)>>=
private long statQueryMetricRequestDistanceBaseUnassignedTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDistanceDetourTotal(1)}
<<Stats members: queryMetricRequestDistanceDetourTotal(1)>>=
private long statQueryMetricRequestDistanceDetourTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDistanceTransitTotal(1)}
<<Stats members: queryMetricRequestDistanceTransitTotal(1)>>=
private long statQueryMetricRequestDistanceTransitTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDurationPickupTotal(1)}
<<Stats members: queryMetricRequestDurationPickupTotal(1)>>=
private long statQueryMetricRequestDurationPickupTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDurationTransitTotal(1)}
<<Stats members: queryMetricRequestDurationTransitTotal(1)>>=
private long statQueryMetricRequestDurationTransitTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestDurationTravelTotal(1)}
<<Stats members: queryMetricRequestDurationTravelTotal(1)>>=
private long statQueryMetricRequestDurationTravelTotalDur = 0;
@

\subsubsection{Stats members: queryMetricRequestTWViolationsTotal(0)}
<<Stats members: queryMetricRequestTWViolationsTotal(0)>>=
private long statQueryMetricRequestTWViolationsTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDistanceBaseTotal(0)}
<<Stats members: queryMetricServerDistanceBaseTotal(0)>>=
private long statQueryMetricServerDistanceBaseTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDistanceCruisingTotal(1)}
<<Stats members: queryMetricServerDistanceCruisingTotal(1)>>=
private long statQueryMetricServerDistanceCruisingTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDistanceServiceTotal(1)}
<<Stats members: queryMetricServerDistanceServiceTotal(1)>>=
private long statQueryMetricServerDistanceServiceTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDistanceTotal(1)}
<<Stats members: queryMetricServerDistanceTotal(1)>>=
private long statQueryMetricServerDistanceTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDurationCruisingTotal(1)}
<<Stats members: queryMetricServerDurationCruisingTotal(1)>>=
private long statQueryMetricServerDurationCruisingTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDurationServiceTotal(1)}
<<Stats members: queryMetricServerDurationServiceTotal(1)>>=
private long statQueryMetricServerDurationServiceTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerDurationTravelTotal(1)}
<<Stats members: queryMetricServerDurationTravelTotal(1)>>=
private long statQueryMetricServerDurationTravelTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServerTWViolationsTotal(0)}
<<Stats members: queryMetricServerTWViolationsTotal(0)>>=
private long statQueryMetricServerTWViolationsTotalDur = 0;
@

\subsubsection{Stats members: queryMetricServiceRate(1)}
<<Stats members: queryMetricServiceRate(1)>>=
private long statQueryMetricServiceRateDur = 0;
@

\subsubsection{Stats members: queryMetricUserDistanceBaseTotal(1)}
<<Stats members: queryMetricUserDistanceBaseTotal(1)>>=
private long statQueryMetricUserDistanceBaseTotalDur = 0;
@

\subsubsection{Stats members: queryRequestTimeOfArrival(1)}
<<Stats members: queryRequestTimeOfArrival(1)>>=
private long statQueryRequestTimeOfArrivalDur = 0;
@

\subsubsection{Stats members: queryRequestTimeOfDeparture(1)}
<<Stats members: queryRequestTimeOfDeparture(1)>>=
private long statQueryRequestTimeOfDepartureDur = 0;
@

\subsubsection{Stats members: queryRequestsCount(0)}
<<Stats members: queryRequestsCount(0)>>=
private long statQueryRequestsCountDur = 0;
@

\subsubsection{Stats members: queryRequestsCountActive(1)}
<<Stats members: queryRequestsCountActive(1)>>=
private long statQueryRequestsCountActiveDur = 0;
@

\subsubsection{Stats members: queryRequestsCountCompleted(1)}
<<Stats members: queryRequestsCountCompleted(1)>>=
private long statQueryRequestsCountCompletedDur = 0;
@

\subsubsection{Stats members: queryRequestsQueued(1)}
<<Stats members: queryRequestsQueued(1)>>=
private long statQueryRequestsQueuedDur = 0;
@

\subsubsection{Stats members: queryServerDistanceRemaining(2)}
<<Stats members: queryServerDistanceRemaining(2)>>=
private long statQueryServerDistanceRemainingDur = 0;
@

\subsubsection{Stats members: queryServerDurationRemaining(2)}
<<Stats members: queryServerDurationRemaining(2)>>=
private long statQueryServerDurationRemainingDur = 0;
@

\subsubsection{Stats members: queryServerLoadMax(2)}
<<Stats members: queryServerLoadMax(2)>>=
private long statQueryServerLoadMaxDur = 0;
@

\subsubsection{Stats members: queryServerRoute(1)}
<<Stats members: queryServerRoute(1)>>=
private long statQueryServerRouteDur = 0;
@

\subsubsection{Stats members: queryServerRouteActive(1)}
<<Stats members: queryServerRouteActive(1)>>=
private long statQueryServerRouteActiveDur = 0;
@

\subsubsection{Stats members: queryServerRouteRemaining(2)}
<<Stats members: queryServerRouteRemaining(2)>>=
private long statQueryServerRouteRemainingDur = 0;
@

\subsubsection{Stats members: queryServerSchedule(1)}
<<Stats members: queryServerSchedule(1)>>=
private long statQueryServerScheduleDur = 0;
@

\subsubsection{Stats members: queryServerScheduleRemaining(2)}
<<Stats members: queryServerScheduleRemaining(2)>>=
private long statQueryServerScheduleRemainingDur = 0;
@

\subsubsection{Stats members: queryServerTimeOfDeparture(1)}
<<Stats members: queryServerTimeOfDeparture(1)>>=
private long statQueryServerTimeOfDepartureDur = 0;
@

\subsubsection{Stats members: queryServersActive(1)}
<<Stats members: queryServersActive(1)>>=
private long statQueryServersActiveDur = 0;
@

\subsubsection{Stats members: queryServersCount(0)}
<<Stats members: queryServersCount(0)>>=
private long statQueryServersCountDur = 0;
@

\subsubsection{Stats members: queryServersCountActive(1)}
<<Stats members: queryServersCountActive(1)>>=
private long statQueryServersCountActiveDur = 0;
@

\subsubsection{Stats members: queryServersLocationsActive(1)}
<<Stats members: queryServersLocationsActive(1)>>=
private long statQueryServersLocationsActiveDur = 0;
@

\subsubsection{Stats members: queryUser(1)}
<<Stats members: queryUser(1)>>=
private long statQueryUserDur = 0;
@

\subsubsection{Stats members: queryVertex(1)}
<<Stats members: queryVertex(1)>>=
private long statQueryVertexDur = 0;
@

\subsubsection{Stats members: queryVertices(0)}
<<Stats members: queryVertices(0)>>=
private long statQueryVerticesDur = 0;
@

\subsubsection{Stats members: queryVerticesCount(0)}
<<Stats members: queryVerticesCount(0)>>=
private long statQueryVerticesCountDur = 0;
@

\subsubsection{Stats members: updateServerAddToSchedule(4)}
<<Stats members: updateServerAddToSchedule(4)>>=
private long statUpdateServerAddToScheduleDur = 0;
@

\subsubsection{Stats members: updateServerRemoveFromSchedule(4)}
<<Stats members: updateServerRemoveFromSchedule(4)>>=
private long statUpdateServerRemoveFromScheduleDur = 0;
@

\subsubsection{Stats members: updateServerRoute(3)}
<<Stats members: updateServerRoute(3)>>=
private long statUpdateServerRouteDur = 0;
@

\subsubsection{Stats: controllerRequestCollection}
<<Stats: controllerRequestCollection>>=
this.statControllerRequestCollectionSize = A1;
this.statControllerRequestCollectionDropped = A2;
this.statControllerRequestCollectionDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: clientHandleRequest}
<<Stats: clientHandleRequest>>=
this.statClientHandleRequestDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: query(2)}
<<Stats: query(2)>>=
this.statQueryDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryEdge(2)}
<<Stats: queryEdge(2)>>=
this.statQueryEdgeDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryEdgeStatistics(0)}
<<Stats: queryEdgeStatistics(0)>>=
this.statQueryEdgeStatisticsDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryEdges(0)}
<<Stats: queryEdges(0)>>=
this.statQueryEdgesDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryEdgesCount(0)}
<<Stats: queryEdgesCount(0)>>=
this.statQueryEdgesCountDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMBR(0)}
<<Stats: queryMBR(0)>>=
this.statQueryMBRDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDistanceBaseTotal(0)}
<<Stats: queryMetricRequestDistanceBaseTotal(0)>>=
this.statQueryMetricRequestDistanceBaseTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDistanceBaseUnassignedTotal(1)}
<<Stats: queryMetricRequestDistanceBaseUnassignedTotal(1)>>=
this.statQueryMetricRequestDistanceBaseUnassignedTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDistanceDetourTotal(1)}
<<Stats: queryMetricRequestDistanceDetourTotal(1)>>=
this.statQueryMetricRequestDistanceDetourTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDistanceTransitTotal(1)}
<<Stats: queryMetricRequestDistanceTransitTotal(1)>>=
this.statQueryMetricRequestDistanceTransitTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDurationPickupTotal(1)}
<<Stats: queryMetricRequestDurationPickupTotal(1)>>=
this.statQueryMetricRequestDurationPickupTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDurationTransitTotal(1)}
<<Stats: queryMetricRequestDurationTransitTotal(1)>>=
this.statQueryMetricRequestDurationTransitTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestDurationTravelTotal(1)}
<<Stats: queryMetricRequestDurationTravelTotal(1)>>=
this.statQueryMetricRequestDurationTravelTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricRequestTWViolationsTotal(0)}
<<Stats: queryMetricRequestTWViolationsTotal(0)>>=
this.statQueryMetricRequestTWViolationsTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDistanceBaseTotal(0)}
<<Stats: queryMetricServerDistanceBaseTotal(0)>>=
this.statQueryMetricServerDistanceBaseTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDistanceCruisingTotal(1)}
<<Stats: queryMetricServerDistanceCruisingTotal(1)>>=
this.statQueryMetricServerDistanceCruisingTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDistanceServiceTotal(1)}
<<Stats: queryMetricServerDistanceServiceTotal(1)>>=
this.statQueryMetricServerDistanceServiceTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDistanceTotal(1)}
<<Stats: queryMetricServerDistanceTotal(1)>>=
this.statQueryMetricServerDistanceTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDurationCruisingTotal(1)}
<<Stats: queryMetricServerDurationCruisingTotal(1)>>=
this.statQueryMetricServerDurationCruisingTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDurationServiceTotal(1)}
<<Stats: queryMetricServerDurationServiceTotal(1)>>=
this.statQueryMetricServerDurationServiceTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerDurationTravelTotal(1)}
<<Stats: queryMetricServerDurationTravelTotal(1)>>=
this.statQueryMetricServerDurationTravelTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServerTWViolationsTotal(0)}
<<Stats: queryMetricServerTWViolationsTotal(0)>>=
this.statQueryMetricServerTWViolationsTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricServiceRate(1)}
<<Stats: queryMetricServiceRate(1)>>=
this.statQueryMetricServiceRateDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryMetricUserDistanceBaseTotal(1)}
<<Stats: queryMetricUserDistanceBaseTotal(1)>>=
this.statQueryMetricUserDistanceBaseTotalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryRequestTimeOfArrival(1)}
<<Stats: queryRequestTimeOfArrival(1)>>=
this.statQueryRequestTimeOfArrivalDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryRequestTimeOfDeparture(1)}
<<Stats: queryRequestTimeOfDeparture(1)>>=
this.statQueryRequestTimeOfDepartureDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryRequestsCount(0)}
<<Stats: queryRequestsCount(0)>>=
this.statQueryRequestsCountDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryRequestsCountActive(1)}
<<Stats: queryRequestsCountActive(1)>>=
this.statQueryRequestsCountActiveDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryRequestsCountCompleted(1)}
<<Stats: queryRequestsCountCompleted(1)>>=
this.statQueryRequestsCountCompletedDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryRequestsQueued(1)}
<<Stats: queryRequestsQueued(1)>>=
this.statQueryRequestsQueuedDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerDistanceRemaining(2)}
<<Stats: queryServerDistanceRemaining(2)>>=
this.statQueryServerDistanceRemainingDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerDurationRemaining(2)}
<<Stats: queryServerDurationRemaining(2)>>=
this.statQueryServerDurationRemainingDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerLoadMax(2)}
<<Stats: queryServerLoadMax(2)>>=
this.statQueryServerLoadMaxDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerRoute(1)}
<<Stats: queryServerRoute(1)>>=
this.statQueryServerRouteDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerRouteActive(1)}
<<Stats: queryServerRouteActive(1)>>=
this.statQueryServerRouteActiveDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerRouteRemaining(2)}
<<Stats: queryServerRouteRemaining(2)>>=
this.statQueryServerRouteRemainingDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerSchedule(1)}
<<Stats: queryServerSchedule(1)>>=
this.statQueryServerScheduleDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerScheduleRemaining(2)}
<<Stats: queryServerScheduleRemaining(2)>>=
this.statQueryServerScheduleRemainingDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServerTimeOfDeparture(1)}
<<Stats: queryServerTimeOfDeparture(1)>>=
this.statQueryServerTimeOfDepartureDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServersActive(1)}
<<Stats: queryServersActive(1)>>=
this.statQueryServersActiveDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServersCount(0)}
<<Stats: queryServersCount(0)>>=
this.statQueryServersCountDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServersCountActive(1)}
<<Stats: queryServersCountActive(1)>>=
this.statQueryServersCountActiveDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryServersLocationsActive(1)}
<<Stats: queryServersLocationsActive(1)>>=
this.statQueryServersLocationsActiveDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryUser(1)}
<<Stats: queryUser(1)>>=
this.statQueryUserDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryVertex(1)}
<<Stats: queryVertex(1)>>=
this.statQueryVertexDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryVertices(0)}
<<Stats: queryVertices(0)>>=
this.statQueryVerticesDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: queryVerticesCount(0)}
<<Stats: queryVerticesCount(0)>>=
this.statQueryVerticesCountDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: updateServerAddToSchedule(4)}
<<Stats: updateServerAddToSchedule(4)>>=
this.statUpdateServerAddToScheduleDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: updateServerRemoveFromSchedule(4)}
<<Stats: updateServerRemoveFromSchedule(4)>>=
this.statUpdateServerRemoveFromScheduleDur = (System.currentTimeMillis() - A0);
@

\subsubsection{Stats: updateServerRoute(3)}
<<Stats: updateServerRoute(3)>>=
this.statUpdateServerRouteDur = (System.currentTimeMillis() - A0);
@

\subsection{Methods}

\subsubsection{Get: getStatControllerClock(0)}
<<Get: getStatControllerClock(0)>>=
int    getStatControllerClock() {
  return this.statControllerClock;
}
@ %def getStatControllerClock

\subsubsection{Get: getStatControllerClockReferenceDay(0)}
<<Get: getStatControllerClockReferenceDay(0)>>=
int    getStatControllerClockReferenceDay() {
  return this.statControllerClockReferenceDay;
}
@ %def getStatControllerClockReferenceDay

\subsubsection{Get: getStatControllerClockReferenceHour(0)}
<<Get: getStatControllerClockReferenceHour(0)>>=
int    getStatControllerClockReferenceHour() {
  return this.statControllerClockReferenceHour;
}
@ %def getStatControllerClockReferenceHour

\subsubsection{Get: getStatControllerClockReferenceMinute(0)}
<<Get: getStatControllerClockReferenceMinute(0)>>=
int    getStatControllerClockReferenceMinute() {
  return this.statControllerClockReferenceMinute;
}
@ %def getStatControllerClockReferenceMinute

\subsubsection{Get: getStatControllerClockReferenceSecond(0)}
<<Get: getStatControllerClockReferenceSecond(0)>>=
int    getStatControllerClockReferenceSecond() {
  return this.statControllerClockReferenceSecond;
}
@ %def getStatControllerClockReferenceSecond

\subsubsection{Get: getStatControllerRequestCollectionSize(0)}
<<Get: getStatControllerRequestCollectionSize(0)>>=
int    getStatControllerRequestCollectionSize() {
  return this.statControllerRequestCollectionSize;
}
@ %def getStatControllerRequestCollectionSize

\subsubsection{Get: getStatControllerRequestCollectionDropped(0)}
<<Get: getStatControllerRequestCollectionDropped(0)>>=
int    getStatControllerRequestCollectionDropped() {
  return this.statControllerRequestCollectionDropped;
}
@ %def getStatControllerRequestCollectionDropped

\subsubsection{Get: getStatControllerRequestCollectionDur(0)}
<<Get: getStatControllerRequestCollectionDur(0)>>=
long   getStatControllerRequestCollectionDur() {
  return this.statControllerRequestCollectionDur;
}
@ %def getStatControllerRequestCollectionDur

\subsubsection{Get: getStatClientQueueSize(0)}
<<Get: getStatClientQueueSize(0)>>=
int getStatClientQueueSize() {
  return this.queue.size();
}
@ %def getStatClientQueueSize

\subsubsection{Get: getStatClientHandleRequestDur(0)}
<<Get: getStatClientHandleRequestDur(0)>>=
long getStatClientHandleRequestDur() {
  return this.statClientHandleRequestDur;
}
@ %def getStatClientHandleRequestDur

\subsubsection{Get: getStatQueryDur(0)}
<<Get: getStatQueryDur(0)>>=
long getStatQueryDur() {
  return this.statQueryDur;
}
@ %def getStatQueryDur

\subsubsection{Get: getStatQueryEdgeDur(0)}
<<Get: getStatQueryEdgeDur(0)>>=
long getStatQueryEdgeDur() {
  return this.statQueryEdgeDur;
}
@ %def getStatQueryEdgeDur

\subsubsection{Get: getStatQueryEdgeStatisticsDur(0)}
<<Get: getStatQueryEdgeStatisticsDur(0)>>=
long getStatQueryEdgeStatisticsDur() {
  return this.statQueryEdgeStatisticsDur;
}
@ %def getStatQueryEdgeStatisticsDur

\subsubsection{Get: getStatQueryEdgesCountDur(0)}
<<Get: getStatQueryEdgesCountDur(0)>>=
long getStatQueryEdgesCountDur() {
  return this.statQueryEdgesCountDur;
}
@ %def getStatQueryEdgesCountDur

\subsubsection{Get: getStatQueryEdgesDur(0)}
<<Get: getStatQueryEdgesDur(0)>>=
long getStatQueryEdgesDur() {
  return this.statQueryEdgesDur;
}
@ %def getStatQueryEdgesDur

\subsubsection{Get: getStatQueryMBRDur(0)}
<<Get: getStatQueryMBRDur(0)>>=
long getStatQueryMBRDur() {
  return this.statQueryMBRDur;
}
@ %def getStatQueryMBRDur

\subsubsection{Get: getStatQueryMetricRequestDistanceBaseTotalDur(0)}
<<Get: getStatQueryMetricRequestDistanceBaseTotalDur(0)>>=
long getStatQueryMetricRequestDistanceBaseTotalDur() {
  return this.statQueryMetricRequestDistanceBaseTotalDur;
}
@ %def getStatQueryMetricRequestDistanceBaseTotalDur

\subsubsection{Get: getStatQueryMetricRequestDistanceBaseUnassignedTotalDur(0)}
<<Get: getStatQueryMetricRequestDistanceBaseUnassignedTotalDur(0)>>=
long getStatQueryMetricRequestDistanceBaseUnassignedTotalDur() {
  return this.statQueryMetricRequestDistanceBaseUnassignedTotalDur;
}
@ %def getStatQueryMetricRequestDistanceBaseUnassignedTotalDur

\subsubsection{Get: getStatQueryMetricRequestDistanceDetourTotalDur(0)}
<<Get: getStatQueryMetricRequestDistanceDetourTotalDur(0)>>=
long getStatQueryMetricRequestDistanceDetourTotalDur() {
  return this.statQueryMetricRequestDistanceDetourTotalDur;
}
@ %def getStatQueryMetricRequestDistanceDetourTotalDur

\subsubsection{Get: getStatQueryMetricRequestDistanceTransitTotalDur(0)}
<<Get: getStatQueryMetricRequestDistanceTransitTotalDur(0)>>=
long getStatQueryMetricRequestDistanceTransitTotalDur() {
  return this.statQueryMetricRequestDistanceTransitTotalDur;
}
@ %def getStatQueryMetricRequestDistanceTransitTotalDur

\subsubsection{Get: getStatQueryMetricRequestDurationPickupTotalDur(0)}
<<Get: getStatQueryMetricRequestDurationPickupTotalDur(0)>>=
long getStatQueryMetricRequestDurationPickupTotalDur() {
  return this.statQueryMetricRequestDurationPickupTotalDur;
}
@ %def getStatQueryMetricRequestDurationPickupTotalDur

\subsubsection{Get: getStatQueryMetricRequestDurationTransitTotalDur(0)}
<<Get: getStatQueryMetricRequestDurationTransitTotalDur(0)>>=
long getStatQueryMetricRequestDurationTransitTotalDur() {
  return this.statQueryMetricRequestDurationTransitTotalDur;
}
@ %def getStatQueryMetricRequestDurationTransitTotalDur

\subsubsection{Get: getStatQueryMetricRequestDurationTravelTotalDur(0)}
<<Get: getStatQueryMetricRequestDurationTravelTotalDur(0)>>=
long getStatQueryMetricRequestDurationTravelTotalDur() {
  return this.statQueryMetricRequestDurationTravelTotalDur;
}
@ %def getStatQueryMetricRequestDurationTravelTotalDur

\subsubsection{Get: getStatQueryMetricRequestTWViolationsTotalDur(0)}
<<Get: getStatQueryMetricRequestTWViolationsTotalDur(0)>>=
long getStatQueryMetricRequestTWViolationsTotalDur() {
  return this.statQueryMetricRequestTWViolationsTotalDur;
}
@ %def getStatQueryMetricRequestTWViolationsTotalDur

\subsubsection{Get: getStatQueryMetricServerDistanceBaseTotalDur(0)}
<<Get: getStatQueryMetricServerDistanceBaseTotalDur(0)>>=
long getStatQueryMetricServerDistanceBaseTotalDur() {
  return this.statQueryMetricServerDistanceBaseTotalDur;
}
@ %def getStatQueryMetricServerDistanceBaseTotalDur

\subsubsection{Get: getStatQueryMetricServerDistanceCruisingTotalDur(0)}
<<Get: getStatQueryMetricServerDistanceCruisingTotalDur(0)>>=
long getStatQueryMetricServerDistanceCruisingTotalDur() {
  return this.statQueryMetricServerDistanceCruisingTotalDur;
}
@ %def getStatQueryMetricServerDistanceCruisingTotalDur

\subsubsection{Get: getStatQueryMetricServerDistanceServiceTotalDur(0)}
<<Get: getStatQueryMetricServerDistanceServiceTotalDur(0)>>=
long getStatQueryMetricServerDistanceServiceTotalDur() {
  return this.statQueryMetricServerDistanceServiceTotalDur;
}
@ %def getStatQueryMetricServerDistanceServiceTotalDur

\subsubsection{Get: getStatQueryMetricServerDistanceTotalDur(0)}
<<Get: getStatQueryMetricServerDistanceTotalDur(0)>>=
long getStatQueryMetricServerDistanceTotalDur() {
  return this.statQueryMetricServerDistanceTotalDur;
}
@ %def getStatQueryMetricServerDistanceTotalDur

\subsubsection{Get: getStatQueryMetricServerDurationCruisingTotalDur(0)}
<<Get: getStatQueryMetricServerDurationCruisingTotalDur(0)>>=
long getStatQueryMetricServerDurationCruisingTotalDur() {
  return this.statQueryMetricServerDurationCruisingTotalDur;
}
@ %def getStatQueryMetricServerDurationCruisingTotalDur

\subsubsection{Get: getStatQueryMetricServerDurationServiceTotalDur(0)}
<<Get: getStatQueryMetricServerDurationServiceTotalDur(0)>>=
long getStatQueryMetricServerDurationServiceTotalDur() {
  return this.statQueryMetricServerDurationServiceTotalDur;
}
@ %def getStatQueryMetricServerDurationServiceTotalDur

\subsubsection{Get: getStatQueryMetricServerDurationTravelTotalDur(0)}
<<Get: getStatQueryMetricServerDurationTravelTotalDur(0)>>=
long getStatQueryMetricServerDurationTravelTotalDur() {
  return this.statQueryMetricServerDurationTravelTotalDur;
}
@ %def getStatQueryMetricServerDurationTravelTotalDur

\subsubsection{Get: getStatQueryMetricServerTWViolationsTotalDur(0)}
<<Get: getStatQueryMetricServerTWViolationsTotalDur(0)>>=
long getStatQueryMetricServerTWViolationsTotalDur() {
  return this.statQueryMetricServerTWViolationsTotalDur;
}
@ %def getStatQueryMetricServerTWViolationsTotalDur

\subsubsection{Get: getStatQueryMetricServiceRateDur(0)}
<<Get: getStatQueryMetricServiceRateDur(0)>>=
long getStatQueryMetricServiceRateDur() {
  return this.statQueryMetricServiceRateDur;
}
@ %def getStatQueryMetricServiceRateDur

\subsubsection{Get: getStatQueryMetricUserDistanceBaseTotalDur(0)}
<<Get: getStatQueryMetricUserDistanceBaseTotalDur(0)>>=
long getStatQueryMetricUserDistanceBaseTotalDur() {
  return this.statQueryMetricUserDistanceBaseTotalDur;
}
@ %def getStatQueryMetricUserDistanceBaseTotalDur

\subsubsection{Get: getStatQueryRequestTimeOfArrivalDur(0)}
<<Get: getStatQueryRequestTimeOfArrivalDur(0)>>=
long getStatQueryRequestTimeOfArrivalDur() {
  return this.statQueryRequestTimeOfArrivalDur;
}
@ %def getStatQueryRequestTimeOfArrivalDur

\subsubsection{Get: getStatQueryRequestTimeOfDepartureDur(0)}
<<Get: getStatQueryRequestTimeOfDepartureDur(0)>>=
long getStatQueryRequestTimeOfDepartureDur() {
  return this.statQueryRequestTimeOfDepartureDur;
}
@ %def getStatQueryRequestTimeOfDepartureDur

\subsubsection{Get: getStatQueryRequestsCountDur(0)}
<<Get: getStatQueryRequestsCountDur(0)>>=
long getStatQueryRequestsCountDur() {
  return this.statQueryRequestsCountDur;
}
@ %def getStatQueryRequestsCountDur

\subsubsection{Get: getStatQueryRequestsCountActiveDur(0)}
<<Get: getStatQueryRequestsCountActiveDur(0)>>=
long getStatQueryRequestsCountActiveDur() {
  return this.statQueryRequestsCountActiveDur;
}
@ %def getStatQueryRequestsCountActiveDur

\subsubsection{Get: getStatQueryRequestsCountCompletedDur(0)}
<<Get: getStatQueryRequestsCountCompletedDur(0)>>=
long getStatQueryRequestsCountCompletedDur() {
  return this.statQueryRequestsCountCompletedDur;
}
@ %def getStatQueryRequestsCountCompletedDur

\subsubsection{Get: getStatQueryRequestsQueuedDur(0)}
<<Get: getStatQueryRequestsQueuedDur(0)>>=
long getStatQueryRequestsQueuedDur() {
  return this.statQueryRequestsQueuedDur;
}
@ %def getStatQueryRequestsQueuedDur

\subsubsection{Get: getStatQueryServerDistanceRemainingDur(0)}
<<Get: getStatQueryServerDistanceRemainingDur(0)>>=
long getStatQueryServerDistanceRemainingDur() {
  return this.statQueryServerDistanceRemainingDur;
}
@ %def getStatQueryServerDistanceRemainingDur

\subsubsection{Get: getStatQueryServerDurationRemainingDur(0)}
<<Get: getStatQueryServerDurationRemainingDur(0)>>=
long getStatQueryServerDurationRemainingDur() {
  return this.statQueryServerDurationRemainingDur;
}
@ %def getStatQueryServerDurationRemainingDur

\subsubsection{Get: getStatQueryServerLoadMaxDur(0)}
<<Get: getStatQueryServerLoadMaxDur(0)>>=
long getStatQueryServerLoadMaxDur() {
  return this.statQueryServerLoadMaxDur;
}
@ %def getStatQueryServerLoadMaxDur

\subsubsection{Get: getStatQueryServerRouteActiveDur(0)}
<<Get: getStatQueryServerRouteActiveDur(0)>>=
long getStatQueryServerRouteActiveDur() {
  return this.statQueryServerRouteActiveDur;
}
@ %def getStatQueryServerRouteActiveDur

\subsubsection{Get: getStatQueryServerRouteDur(0)}
<<Get: getStatQueryServerRouteDur(0)>>=
long getStatQueryServerRouteDur() {
  return this.statQueryServerRouteDur;
}
@ %def getStatQueryServerRouteDur

\subsubsection{Get: getStatQueryServerRouteRemainingDur(0)}
<<Get: getStatQueryServerRouteRemainingDur(0)>>=
long getStatQueryServerRouteRemainingDur() {
  return this.statQueryServerRouteRemainingDur;
}
@ %def getStatQueryServerRouteRemainingDur

\subsubsection{Get: getStatQueryServerScheduleDur(0)}
<<Get: getStatQueryServerScheduleDur(0)>>=
long getStatQueryServerScheduleDur() {
  return this.statQueryServerScheduleDur;
}
@ %def getStatQueryServerScheduleDur

\subsubsection{Get: getStatQueryServerScheduleRemainingDur(0)}
<<Get: getStatQueryServerScheduleRemainingDur(0)>>=
long getStatQueryServerScheduleRemainingDur() {
  return this.statQueryServerScheduleRemainingDur;
}
@ %def getStatQueryServerScheduleRemainingDur

\subsubsection{Get: getStatQueryServerTimeOfDepartureDur(0)}
<<Get: getStatQueryServerTimeOfDepartureDur(0)>>=
long getStatQueryServerTimeOfDepartureDur() {
  return this.statQueryServerTimeOfDepartureDur;
}
@ %def getStatQueryServerTimeOfDepartureDur

\subsubsection{Get: getStatQueryServersActiveDur(0)}
<<Get: getStatQueryServersActiveDur(0)>>=
long getStatQueryServersActiveDur() {
  return this.statQueryServersActiveDur;
}
@ %def getStatQueryServersActiveDur

\subsubsection{Get: getStatQueryServersCountDur(0)}
<<Get: getStatQueryServersCountDur(0)>>=
long getStatQueryServersCountDur() {
  return this.statQueryServersCountDur;
}
@ %def getStatQueryServersCountDur

\subsubsection{Get: getStatQueryServersCountActiveDur(0)}
<<Get: getStatQueryServersCountActiveDur(0)>>=
long getStatQueryServersCountActiveDur() {
  return this.statQueryServersCountActiveDur;
}
@ %def getStatQueryServersCountActiveDur

\subsubsection{Get: getStatQueryServersLocationsActiveDur(0)}
<<Get: getStatQueryServersLocationsActiveDur(0)>>=
long getStatQueryServersLocationsActiveDur() {
  return this.statQueryServersLocationsActiveDur;
}
@ %def getStatQueryServersLocationsActiveDur

\subsubsection{Get: getStatQueryUserDur(0)}
<<Get: getStatQueryUserDur(0)>>=
long getStatQueryUserDur() {
  return this.statQueryUserDur;
}
@ %def getStatQueryUserDur

\subsubsection{Get: getStatQueryVertexDur(0)}
<<Get: getStatQueryVertexDur(0)>>=
long getStatQueryVertexDur() {
  return this.statQueryVertexDur;
}
@ %def getStatQueryVertexDur

\subsubsection{Get: getStatQueryVerticesCountDur(0)}
<<Get: getStatQueryVerticesCountDur(0)>>=
long getStatQueryVerticesCountDur() {
  return this.statQueryVerticesCountDur;
}
@ %def getStatQueryVerticesCountDur

\subsubsection{Get: getStatQueryVerticesDur(0)}
<<Get: getStatQueryVerticesDur(0)>>=
long getStatQueryVerticesDur() {
  return this.statQueryVerticesDur;
}
@ %def getStatQueryVerticesDur

