\chapter{Tutorial}
\label{ch-tutorial}

\section{Installation}
\label{tut-install}

\renewcommand{\thepage}{\arabic{page}}
\setcounter{page}{1}

Jargo exists as a single Java archive (\texttt{jar}) file called
\texttt{jargors-{\jsVersion}.jar}. To ``install'' it means to compile the Java
source files into the \texttt{jar}, and then place the \texttt{jar} file
somewhere on your computer that is accessible by your Java runtime classpath
(\texttt{-cp}) option. Jargo comes with its own Make-based build system. Type
\texttt{make} in the Jargo root directory to see a list of build
commands (Table~\ref{tab:tut-install-build.tex}).

If you have an internet connection and are on Linux, Mac, or using
Cygwin/MinGW, you might be able to get away with:
\begin{verbatim}
> make all
\end{verbatim}
Otherwise, read on for details.

\subsection{Prerequisites}
\label{tut-install: prerequisites}

Before you begin compiling, make sure you have the following prerequisites.

\subsubsection{For compiling Jargo:}
These prerequisites can be automatically obtained by typing \texttt{make dep}
in the Jargo root directory. The files are downloaded into the \texttt{dep/}
folder. For GTreeJNI and JavaFX native components, the command gets the x64
Linux versions.  If you are on a different platform, you will need to get these
native libraries by yourself.
\begin{itemize}
\item Java JDK 11.0.1 or above. Latest Java Development Kits licensed under the
GPL are available at \url{https://jdk.java.net}.
\item Apache Commons DBCP 2.7.0 package, obtainable from
\url{https://commons.apache.org/proper/commons-dbcp/}.
\item Apache Commons Pool 2.7.0 package, needed by DBCP and obtainable from
\url{https://commons.apache.org/proper/commons-pool/}.
\item Jargo GTreeJNI 2.0 native library and Java package, obtainable from
\url{https://github.com/jamjpan/GTreeJNI}.
\item JavaFX SDK 11 or above, obtainable from \url{https://openjfx.io/}.
\item VisualVM charting components, obtainable from \url{
http://bits.netbeans.org/nexus/content/repositories/visualvm}.
\end{itemize}

\subsubsection{(Optional) For compiling the documentation (this document):}
\begin{itemize}
\item The \texttt{texfot} program, included in most distributions of LaTeX.
\item The \texttt{pdflatex} program, included in most distributions of LaTeX.
\end{itemize}

\subsubsection{(Optional) For compiling the Java and LaTeX sources:}
\begin{itemize}
\item The \texttt{notangle} and \texttt{noweave} programs, obtainable from
\url{https://www.cs.tufts.edu/~nr/noweb/}.
\end{itemize}
If you are compiling noweb from source, use \texttt{icont} instead of
\texttt{awk}. If you are on a Debian system, pre-packaged binaries compiled
with \texttt{icont} should already be available.

\subsection{Building the Documentation}
\label{tut-install: documentation}

To build the documentation (this file), type \texttt{make pdf} in the Jargo
root directory.

\subsection{For Users: Building the Library}
\label{tut-install: library}

Follow these steps to build the \texttt{jargors-{\jsVersion}.jar} library from the
Java sources in the \texttt{java/} directory.
\begin{enumerate}
\item Verify the \texttt{dep/} folder contains the prerequisites listed in
Table~\ref{tab:tut-install-prerequisites}. Typing \texttt{make dep} will
automatically download the prerequisites into the \texttt{dep/} folder.
Otherwise, the items in \textit{italics} are obtainable from the JavaFX SDK for
your platform.  The \texttt{libgtree.so} native library is obtainable from
Jargo GTreeJNI and must be built for your platform beforehand.  The remaining
\texttt{*.jar} files are obtainable from the websites listed above.
\item Type \texttt{javac -version} to verify the Java compiler version is at
least 11.0.1.
\item Type \texttt{make jar}. The compiled library is placed in
\texttt{jar/jargors-{\jsVersion}.jar}.
\end{enumerate}

\subsection{For Developers: Building the Java and LaTeX Sources}
\label{tut-install: sources}

The Jargo Java and LaTeX sources come from noweb files in the \texttt{src/}
directory. To rebuild the Java and LaTeX sources from these files, type
\texttt{make src}.

\subsection{Summary}
\label{tut-install: summary}

Here is a summary of build targets.
\begin{itemize}
\item \texttt{make all}: build the library, documentation, and fetch dependencies into
the \texttt{dep} folder.
\item \texttt{make jar}: build the \texttt{jar/jargors-{\jsVersion}.jar} library only.
\item \texttt{make pdf}: build the \texttt{doc/jargo.pdf} documentation only.
\item \texttt{make src}: recompile the \texttt{java/*/*.java} source files from
the \texttt{src/*.nw} noweb files.
\item \texttt{make dep}: download the build prerequisites from the internet.
\item \texttt{make clean}: delete build objects \texttt{jar/}, \texttt{com/},
\texttt{pdf/}, \texttt{build.log}, and \texttt{wget.log}
\item \texttt{make purge}: in addition to \texttt{clean}, also delete the
Java source files and \texttt{doc/body.tex}.
\item \texttt{make purgedep}: delete the \texttt{dep/} folder.
\end{itemize}

\begin{table}
\small
\centering
\input{res/doc-tab/tut-install-build}
\caption{Jargo build commands.}
\label{tab:tut-install-build.tex}
\end{table}

\begin{table}
\small
\centering
\input{res/doc-tab/tut-install-prerequisites}
\caption{Prerequisites for building Jargo, including JavaFX native libraries.}
\label{tab:tut-install-prerequisites}
\end{table}
