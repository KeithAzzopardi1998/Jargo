\chapter{Candidate Reductions}
\label{search-reductions}

\section{Random Reduction}

<<Reduce: Random>>=
{
  Random random = new Random();
  List<Integer> keys = new ArrayList<Integer>(candidates.keySet());
  int randomKey = keys.get(random.nextInt(keys.size()));
  cand = Map.entry(randomKey, candidates.get(randomKey));
}
@

\section{Minimum Reduction}

<<Reduce: Minimum Value>>=
for (final Entry<Integer, Integer> entry : candidates.entrySet()) {
  if (cand == null || cand.getValue() > entry.getValue()) {
    cand = entry;
  }
}
@

\section{Maximum Reduction}

<<Reduce: Maximum Value>>=
for (final Entry<Integer, Integer> entry : candidates.entrySet()) {
  if (cand == null || cand.getValue() < entry.getValue()) {
    cand = entry;
  }
}
@

