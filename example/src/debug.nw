\part{Debug}
\label{part-debug}

<<Debug: print request>>=
if (DEBUG) {
  System.out.printf("got request={ %d, %d, %d, %d, %d, %d, %d }\n",
      r[0], r[1], r[2], r[3], r[4], r[5], r[6]);
}
@

<<Debug: print candidates>>=
if (DEBUG) {
  System.out.printf("got candidates={ #%d }\n", candidates.size());
}
@

<<Debug: map/filter: last update time>>=
if (DEBUG) {
  System.out.printf("do map/filter: last update time\n");
}
@

<<Debug: map/filter: proximity>>=
if (DEBUG) {
  System.out.printf("do map/filter: proximity\n");
}
@

<<Debug: print min candidate>>=
if (DEBUG) {
  System.out.printf("got min={ %d, %d }\n", min.getKey(), min.getValue());
}
@

<<Debug: print brem>>=
if (DEBUG) {
  System.out.printf("got brem=\n");
  for (int _i = 0; _i < (brem.length - 3); _i += 4) {
    System.out.printf("  { %d, %d, %d, %d }\n",
        brem[_i], brem[_i+1], brem[_i+2], brem[_i+3]);
  }
}
@

<<Debug: print bnew>>=
if (DEBUG) {
  System.out.printf("got bnew=\n");
  for (int _i = 0; _i < (bnew.length - 3); _i += 4) {
    System.out.printf("  { %d, %d, %d, %d }\n",
        bnew[_i], bnew[_i+1], bnew[_i+2], bnew[_i+3]);
  }
}
@

<<Debug: print stop>>=
if (DEBUG) {
  System.out.printf("set stop={ %d, %d, %d, %d }\n",
      stop[0], stop[1], stop[2], stop[3]);
}
@

<<Debug: print ipos>>=
if (DEBUG) {
  System.out.printf("set ipos=%d\n", ipos);
}
@

<<Debug: print tbeg, tend>>=
if (DEBUG) {
  System.out.printf("set tbeg=%d, tend=%d\n", tbeg, tend);
}
@

<<Debug: print wact>>=
if (DEBUG) {
  System.out.printf("got wact=\n");
  for (int _i = 0; _i < (wact.length - 1); _i += 2) {
    System.out.printf("  { %d, %d }\n",
        wact[_i], wact[_i+1]);
  }
}
@

<<Debug: echo limitation 4>>=
if (DEBUG) {
  System.out.printf("detected limitation #4\n");
}
@

<<Debug: echo remove event>>=
if (DEBUG) {
  System.out.printf("remove event\n");
}
@

<<Debug: print ok>>=
if (DEBUG) {
  System.out.printf("set ok=%s\n", (ok ? "true" : "false"));
}
@

<<Debug: print wbeg>>=
if (DEBUG) {
  System.out.printf("set wbeg={ %d, %d }\n", wbeg[0], wbeg[1]);
}
@

<<Debug: print wnew>>=
if (DEBUG) {
  System.out.printf("set wnew=\n");
  for (int _i = 0; _i < (wnew.length - 1); _i += 2) {
    System.out.printf("  { %d, %d }\n",
        wnew[_i], wnew[_i+1]);
  }
}
@

<<Debug: print remove candidate>>=
if (DEBUG) {
  System.out.printf("remove candidate %d\n", sid);
}
@

