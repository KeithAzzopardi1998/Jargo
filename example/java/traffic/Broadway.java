package com.github.jargors.traffic;
import com.github.jargors.core.*;
import java.util.Map;
public class Broadway extends Traffic {
  private Map<Integer, Integer> lu_broadway = Map.ofEntries(
    Map.entry(10024,6898),
    Map.entry(10071,7512),
    Map.entry(10109,11306),
    Map.entry(10298,4057),
    Map.entry(10342,9159),
    Map.entry(10378,10775),
    Map.entry(1041,1043),
    Map.entry(1043,5145),
    Map.entry(10506,11594),
    Map.entry(10517,10519),
    Map.entry(10519,3814),
    Map.entry(10565,9347),
    Map.entry(10572,3304),
    Map.entry(10628,6944),
    Map.entry(10671,10672),
    Map.entry(10672,326),
    Map.entry(10690,10691),
    Map.entry(10691,1994),
    Map.entry(10729,11922),
    Map.entry(10775,4882),
    Map.entry(10864,2072),
    Map.entry(10949,7023),
    Map.entry(10966,7019),
    Map.entry(10983,2568),
    Map.entry(11024,3875),
    Map.entry(11066,7349),
    Map.entry(11172,8494),
    Map.entry(11197,1893),
    Map.entry(11306,7781),
    Map.entry(11314,2490),
    Map.entry(11366,1216),
    Map.entry(11398,10342),
    Map.entry(11438,8502),
    Map.entry(11439,11398),
    Map.entry(1155,6168),
    Map.entry(11594,160),
    Map.entry(1162,2350),
    Map.entry(11922,10949),
    Map.entry(11930,7340),
    Map.entry(12,4286),
    Map.entry(12114,1239),
    Map.entry(1216,1218),
    Map.entry(1218,7106),
    Map.entry(1239,1241),
    Map.entry(1241,3383),
    Map.entry(1290,4347),
    Map.entry(1467,1469),
    Map.entry(1469,10628),
    Map.entry(1564,1565),
    Map.entry(1565,4163),
    Map.entry(160,161),
    Map.entry(161,8444),
    Map.entry(1732,1734),
    Map.entry(1734,1564),
    Map.entry(180,181),
    Map.entry(181,4284),
    Map.entry(1821,10671),
    Map.entry(1832,1833),
    Map.entry(1833,10864),
    Map.entry(1854,1855),
    Map.entry(1855,2920),
    Map.entry(1883,6805),
    Map.entry(1893,1894),
    Map.entry(1894,3858),
    Map.entry(1936,1937),
    Map.entry(1937,5830),
    Map.entry(1950,887),
    Map.entry(1994,632),
    Map.entry(2072,2073),
    Map.entry(2073,7294),
    Map.entry(2083,2084),
    Map.entry(2084,6989),
    Map.entry(2118,7558),
    Map.entry(2146,2147),
    Map.entry(2147,3515),
    Map.entry(218,219),
    Map.entry(219,11314),
    Map.entry(2194,2195),
    Map.entry(2195,8923),
    Map.entry(2252,4641),
    Map.entry(226,8293),
    Map.entry(2277,2278),
    Map.entry(2278,9841),
    Map.entry(2316,843),
    Map.entry(2323,2324),
    Map.entry(2324,8683),
    Map.entry(2350,12),
    Map.entry(2393,2394),
    Map.entry(2394,4693),
    Map.entry(2413,2083),
    Map.entry(2417,6),
    Map.entry(2418,2419),
    Map.entry(2419,6973),
    Map.entry(2458,1854),
    Map.entry(2468,2418),
    Map.entry(2490,2492),
    Map.entry(2492,4298),
    Map.entry(2568,2570),
    Map.entry(2570,10024),
    Map.entry(2615,10729),
    Map.entry(2680,1883),
    Map.entry(2750,2751),
    Map.entry(2751,3016),
    Map.entry(2888,12114),
    Map.entry(2920,2888),
    Map.entry(2928,2194),
    Map.entry(3011,3013),
    Map.entry(3013,2417),
    Map.entry(3016,4767),
    Map.entry(3024,9569),
    Map.entry(3107,1467),
    Map.entry(3205,3207),
    Map.entry(3207,9193),
    Map.entry(3213,582),
    Map.entry(323,325),
    Map.entry(325,10109),
    Map.entry(326,327),
    Map.entry(327,3652),
    Map.entry(3299,2468),
    Map.entry(3304,3305),
    Map.entry(3305,5836),
    Map.entry(3383,6221),
    Map.entry(3423,3424),
    Map.entry(3424,6985),
    Map.entry(3432,3434),
    Map.entry(3434,323),
    Map.entry(3471,1936),
    Map.entry(351,353),
    Map.entry(3515,2615),
    Map.entry(353,773),
    Map.entry(355,356),
    Map.entry(3559,7418),
    Map.entry(356,11366),
    Map.entry(3597,3598),
    Map.entry(3598,8635),
    Map.entry(3628,3629),
    Map.entry(3629,3107),
    Map.entry(363,364),
    Map.entry(364,6983),
    Map.entry(3652,9572),
    Map.entry(3670,8411),
    Map.entry(3814,3816),
    Map.entry(3816,7084),
    Map.entry(3858,6061),
    Map.entry(3875,3876),
    Map.entry(3876,2458),
    Map.entry(398,399),
    Map.entry(399,3471),
    Map.entry(4057,2277),
    Map.entry(4149,2316),
    Map.entry(4163,6214),
    Map.entry(4201,4203),
    Map.entry(4203,5670),
    Map.entry(4213,6243),
    Map.entry(4284,5690),
    Map.entry(4286,6625),
    Map.entry(4298,9435),
    Map.entry(4347,4348),
    Map.entry(4348,6066),
    Map.entry(4357,4358),
    Map.entry(4358,6855),
    Map.entry(4414,8229),
    Map.entry(4516,4620),
    Map.entry(4529,1155),
    Map.entry(4535,5625),
    Map.entry(4543,8810),
    Map.entry(4620,3597),
    Map.entry(4641,4881),
    Map.entry(4693,4694),
    Map.entry(4694,5408),
    Map.entry(4742,4743),
    Map.entry(4743,3024),
    Map.entry(4767,4768),
    Map.entry(4768,5748),
    Map.entry(4774,4775),
    Map.entry(4775,5797),
    Map.entry(4881,7348),
    Map.entry(4882,4883),
    Map.entry(4883,4357),
    Map.entry(4927,11930),
    Map.entry(4932,5186),
    Map.entry(5017,7725),
    Map.entry(5024,5861),
    Map.entry(5145,5146),
    Map.entry(5146,525),
    Map.entry(5183,5184),
    Map.entry(5184,218),
    Map.entry(5186,4543),
    Map.entry(525,526),
    Map.entry(526,2118),
    Map.entry(5408,351),
    Map.entry(5481,9498),
    Map.entry(5625,4414),
    Map.entry(5670,11197),
    Map.entry(5690,5691),
    Map.entry(5691,10690),
    Map.entry(5797,4149),
    Map.entry(582,583),
    Map.entry(583,8426),
    Map.entry(5830,355),
    Map.entry(5836,11066),
    Map.entry(5861,5862),
    Map.entry(5862,1950),
    Map.entry(6,8),
    Map.entry(605,606),
    Map.entry(606,4529),
    Map.entry(6061,3628),
    Map.entry(6066,10506),
    Map.entry(6076,1162),
    Map.entry(6130,6131),
    Map.entry(6131,8353),
    Map.entry(6168,7647),
    Map.entry(621,11024),
    Map.entry(6214,3423),
    Map.entry(6221,6222),
    Map.entry(6222,7324),
    Map.entry(6234,2393),
    Map.entry(6243,4774),
    Map.entry(632,6750),
    Map.entry(6625,5024),
    Map.entry(6708,8140),
    Map.entry(6750,6752),
    Map.entry(6752,8339),
    Map.entry(6805,3299),
    Map.entry(6855,6856),
    Map.entry(6856,1041),
    Map.entry(6889,4932),
    Map.entry(6944,11438),
    Map.entry(6973,11439),
    Map.entry(6983,6984),
    Map.entry(6984,8154),
    Map.entry(6985,927),
    Map.entry(6989,3011),
    Map.entry(7019,4742),
    Map.entry(7023,5183),
    Map.entry(7084,10983),
    Map.entry(7086,888),
    Map.entry(7106,7645),
    Map.entry(7217,10298),
    Map.entry(7254,2928),
    Map.entry(7294,7295),
    Map.entry(7295,7524),
    Map.entry(7324,3205),
    Map.entry(7328,7330),
    Map.entry(7330,2750),
    //Map.entry(7339,130),
    Map.entry(7339,7328),
    Map.entry(7340,8109),
    Map.entry(7348,10565),
    Map.entry(7349,3559),
    Map.entry(7418,11172),
    Map.entry(7477,10378),
    Map.entry(7512,7513),
    Map.entry(7513,7254),
    Map.entry(7524,605),
    Map.entry(7558,1832),
    Map.entry(7611,9865),
    Map.entry(7645,7646),
    Map.entry(7646,3213),
    Map.entry(7647,4201),
    Map.entry(7725,7775),
    Map.entry(773,2252),
    Map.entry(7775,9024),
    Map.entry(7781,130),
    Map.entry(7853,7855),
    Map.entry(7855,398),
    Map.entry(8,4535),
    Map.entry(8059,10517),
    Map.entry(8109,2919),
    Map.entry(8140,10966),
    Map.entry(8154,6076),
    Map.entry(8201,8202),
    Map.entry(8202,2680),
    Map.entry(8229,8918),
    Map.entry(8293,2413),
    Map.entry(8335,180),
    Map.entry(8339,2323),
    Map.entry(8353,8354),
    Map.entry(8354,7853),
    Map.entry(8411,6234),
    Map.entry(8426,1821),
    Map.entry(843,845),
    Map.entry(8444,363),
    Map.entry(845,3670),
    Map.entry(8475,5017),
    Map.entry(8494,8495),
    Map.entry(8495,6130),
    Map.entry(8502,2146),
    Map.entry(8635,1290),
    Map.entry(8683,8684),
    Map.entry(8684,10572),
    Map.entry(8810,8812),
    Map.entry(8812,9103),
    Map.entry(887,6708),
    Map.entry(888,889),
    Map.entry(889,226),
    Map.entry(8918,7611),
    Map.entry(8923,6889),
    Map.entry(9024,8059),
    Map.entry(9103,4516),
    Map.entry(9159,5481),
    Map.entry(9193,10071),
    Map.entry(927,929),
    Map.entry(929,8475),
    Map.entry(9347,9348),
    Map.entry(9348,8335),
    Map.entry(9435,3432),
    Map.entry(9498,7217),
    Map.entry(9521,621),
    Map.entry(9569,4927),
    Map.entry(9572,9573),
    Map.entry(9573,9908),
    Map.entry(9841,9521),
    Map.entry(9865,9866),
    Map.entry(9866,1732),
    Map.entry(9908,8201)
  );
  // New Year's Eve in Manhattan: speed on Broadway is at 80% at 11:30 PM, then
  // speed decreases starting from midnight until 1:30 AM to 20% until 5:00 AM.
  // We do (vertex - 1) because edges above are 0-indexed while nodes in Jargo
  // are 1-indexed.
  public double apply(int v1, int v2, long msec) {
    double per = 1.0;
    if ((lu_broadway.containsKey(v1-1) && lu_broadway.get(v1-1) == v2-1)
     || (lu_broadway.containsKey(v2-1) && lu_broadway.get(v2-1) == v1-1)) {
      if (msec > 84600_000) {  // 20% at 11:30 PM
        // per = 1-0.8*(86400_000 - msec)/1800_000;
        per = 0.2;
      } else if (msec < 5400_000) {  // 100% at 12:00AM moving to 20% at 1:30 AM
        per = Math.max(0.2, (5400_000 - msec)/5400_000);
      } else if (msec < 18000_000) {  // 20% from 1:30 AM to 5:00 AM
        per = 0.2;
      }
    }
    return per;
  }
}
