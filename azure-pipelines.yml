# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self


variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build Image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker Hub UM'
        repository: 'keithazzopardium/jargo'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)

- stage: Simulation
  displayName: Run Simulation
  jobs:  
  - job: Simulate
    strategy:
      matrix: 
        'day1':
          instance_name: 'sim-6may-hr0_hr5-sample.instance'
        'day2':
          instance_name: 'sim-6may-hr0_hr5-sample.instance'
        'day3':
          instance_name: 'sim-7may-hr0_hr5-sample.instance'
        'day4':
          instance_name: 'sim-8may-hr0_hr5-sample.instance'
        'day5':
          instance_name: 'sim-9may-hr0_hr5-sample.instance'
        'day6':
          instance_name: 'sim-10may-hr0_hr5-sample.instance'
        'day7':
          instance_name: 'sim-11may-hr0_hr5-sample.instance'                    
    displayName: Simulate
    pool:
      vmImage: 'ubuntu-18.04'
    container: keithazzopardium/jargo:$(tag)
    steps:
    - task: CmdLine@2
      inputs:
        script: 'ls -R /jargo'
    - task: CmdLine@2
      inputs:
        script: |
          cd /jargo && ./run_example_simonetto.sh $(instance_name) 2>&1 | tee /jargo/sim_log.txt
    - task: CmdLine@2
      inputs:
        script: |
          cd /jargo && ./run_example_simonetto.sh $(instance_name)
    - task: CmdLine@2
      inputs:
        script: |
          cp -vf /jargo/sim_log.txt /jargo/export
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '/jargo/export'
        includeRootFolder: true
        archiveType: 'tar'
        archiveFile: '$(Build.ArtifactStagingDirectory)/build$(Build.BuildId)_$(instance_name).zip'
        replaceExistingArchive: true
        verbose: true





